
==================== FINAL INTERFACE ====================
2017-07-19 19:46:23.140693 UTC

interface main@main:Main [family instance module] 8002
  interface hash: b404d84b23d1b54a0cc555de59f97b32
  ABI hash: e982828c9e8820aff19169624df421c5
  export-list hash: 4292d9e0e667137f287bdaf9fa711a24
  orphan hash: 90be3c943eb68997f1e5707a75d18173
  flag hash: 2abab9ec49ad96096a9877d52e0b1347
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-4NsFv08p09OH79kZsQDVh1
                      aeson-1.0.2.1@aeson-1.0.2.1-1etpxceMb6x9mZOLZOXYsC
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-IEEYoTzFh3JE4HjRWbqraH
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-4MOd6xlwKyM9z08XC1d09i
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.5.4@base-orphans-0.5.4-ABoxiBf7nXc7Qqh66CgYc9
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-Fiik8BUGIOz3LnHv8R26NC
                      charset-0.3.7.1@charset-0.3.7.1-H9haoEy2p9aEa0jGJLQFfC
                      comonad-5.0.1@comonad-5.0.1-7j4AeOMTFovFSFO9XMFm1
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-3UCY3arLvoG71jrGOYoc39
                      cryptonite-0.21@cryptonite-0.21-KGlwixLJXrd6sgN0FjLIwH
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.2@distributive-0.5.2-JCgfTXNR3ywAyV7fFWIBI5
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa
                      free-4.12.4@free-4.12.4-GP8SJAzGfyq6UeKHSkzaha
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-I8TtfTMw8kCEo1q1h2BgxU
                      http-api-data-0.3.7.1@http-api-data-0.3.7.1-MDikHkokKn81PsqfyL2eF
                      http-date-0.0.6.1@http-date-0.0.6.1-ICLjftrhQ5dDNj4DUILAr7
                      http-media-0.6.4@http-media-0.6.4-FNtOOgO9qfc7AjETjozNDt
                      http-types-0.9.1@http-types-0.9.1-Qy5Ex19QlZ74tBRRG3v2y
                      http2-1.6.3@http2-1.6.3-FPkuQP5aF0AHAOcRUVbUvK integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR
                      kan-extensions-5.0.2@kan-extensions-5.0.2-KVnVF8a8AJ42gswaE26iyg
                      lens-4.15.1@lens-4.15.1-5zov4hTDNJbGtjRIlZtORm
                      memory-0.14.6@memory-0.14.6-Aar7hKewN999MXzU9kvt2a
                      mime-types-0.1.0.7@mime-types-0.1.0.7-31dnC2ifQ9r5TApUZagLPk
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      profunctors-5.2@profunctors-5.2-85ZLvwISeusLRZoJlitoyP
                      psqueues-0.2.3.0@psqueues-0.2.3.0-13RR0saqlyC8xR0YbRzts0
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      scientific-0.3.5.1@scientific-0.3.5.1-ExDzxC7QmbS5TvW39AAm4A
                      semigroupoids-5.1@semigroupoids-5.1-G6hp8hbTJmG326ffvAeaw8
                      servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX
                      servant-foreign-0.9.1.1@servant-foreign-0.9.1.1-8ukndo6eXzWIxhE3rylofo
                      servant-js-0.9.3@servant-js-0.9.3-73TPDkcPUPpJiKWa4R5jN4
                      servant-server-0.9.1.1@servant-server-0.9.1.1-DPVuwEqPtiRDtXTIGiBJmY
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-4uYtK5a0djFILo2ePfLs47
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-ANLyYjCKvHm5Mv911o5sOC
                      string-conversions-0.4.0.1@string-conversions-0.4.0.1-5bhARACLQyXG4DLNegoSj4
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      th-lift-instances-0.1.11@th-lift-instances-0.1.11-6UGhWEzsqtPBL6URKwAy1o
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-6txQagwbKwSESVNJVBgwqv
                      uri-bytestring-0.2.3.3@uri-bytestring-0.2.3.3-2Imk8vPs3cPG9gbvxXXJkI
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-3qZyCmY7VWB1pGj23GIEzw
                      vault-0.3.0.7@vault-0.3.0.7-H4kfNuSlFqmKLHmBSHcOfT
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      wai-3.2.1.1@wai-3.2.1.1-2ORFowrqBlw8LrI3bTChZy
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-KckN0SDsFrH10Ph7tyd9l9
                      warp-3.2.13@warp-3.2.13-HAkmfE8mH7WK3Wj46XjM7G
                      word8-0.1.2@word8-0.1.2-9WDPGCTpW7JJnsiAQavtd1
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-IEEYoTzFh3JE4HjRWbqraH:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-IEEYoTzFh3JE4HjRWbqraH:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Collection.Collection
         hashable-1.2.6.1@hashable-1.2.6.1-I8TtfTMw8kCEo1q1h2BgxU:Data.Hashable.Generic
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         th-lift-instances-0.1.11@th-lift-instances-0.1.11-6UGhWEzsqtPBL6URKwAy1o:Instances.TH.Lift
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-4NsFv08p09OH79kZsQDVh1:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-IEEYoTzFh3JE4HjRWbqraH:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Array.Bitmap
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Array.Boxed
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Boot.Builder
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Collection.Buildable
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Collection.Collection
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Collection.Element
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Collection.Keyed
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Collection.Mutable
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Monad.Exception
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Numerical.Subtractive
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Primitive.Block.Base
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Primitive.Monad
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Primitive.Types.OffsetSize
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Primitive.UArray.Base
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Primitive.UTF8.Base
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.String.Encoding.ASCII7
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.String.Encoding.ISO_8859_1
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.String.Encoding.UTF16
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.String.Encoding.UTF32
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.String.UTF8
                         foundation-0.0.13@foundation-0.0.13-G4GHWkMwmXnF7HKMtT8vGa:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-api-data-0.3.7.1@http-api-data-0.3.7.1-MDikHkokKn81PsqfyL2eF:Web.Internal.FormUrlEncoded
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Range
                         kan-extensions-5.0.2@kan-extensions-5.0.2-KVnVF8a8AJ42gswaE26iyg:Data.Functor.Day
                         kan-extensions-5.0.2@kan-extensions-5.0.2-KVnVF8a8AJ42gswaE26iyg:Data.Functor.Yoneda
                         lens-4.15.1@lens-4.15.1-5zov4hTDNJbGtjRIlZtORm:Control.Lens.At
                         lens-4.15.1@lens-4.15.1-5zov4hTDNJbGtjRIlZtORm:Control.Lens.Internal.Indexed
                         lens-4.15.1@lens-4.15.1-5zov4hTDNJbGtjRIlZtORm:Control.Lens.Reified
                         lens-4.15.1@lens-4.15.1-5zov4hTDNJbGtjRIlZtORm:Control.Lens.Tuple
                         lens-4.15.1@lens-4.15.1-5zov4hTDNJbGtjRIlZtORm:Control.Lens.Wrapped
                         lens-4.15.1@lens-4.15.1-5zov4hTDNJbGtjRIlZtORm:Control.Lens.Zoom
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-85ZLvwISeusLRZoJlitoyP:Data.Profunctor.Rep
                         servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.Utils.Links
                         servant-foreign-0.9.1.1@servant-foreign-0.9.1.1-8ukndo6eXzWIxhE3rylofo:Servant.Foreign.Internal
                         servant-server-0.9.1.1@servant-server-0.9.1.1-DPVuwEqPtiRDtXTIGiBJmY:Servant.Server.Internal
                         servant-server-0.9.1.1@servant-server-0.9.1.1-DPVuwEqPtiRDtXTIGiBJmY:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-6txQagwbKwSESVNJVBgwqv:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-6txQagwbKwSESVNJVBgwqv:Data.HashSet
                         uri-bytestring-0.2.3.3@uri-bytestring-0.2.3.3-2Imk8vPs3cPG9gbvxXXJkI:URI.ByteString.Types
                         uuid-types-1.0.3@uuid-types-1.0.3-3qZyCmY7VWB1pGj23GIEzw:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-3qZyCmY7VWB1pGj23GIEzw:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-1etpxceMb6x9mZOLZOXYsC:Data.Aeson 3a5109c3c48f55517e5e92917104b224
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-1etpxceMb6x9mZOLZOXYsC:Data.Aeson.Types.FromJSON 6608fb88be07098a574dfe66781c6049
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-1etpxceMb6x9mZOLZOXYsC:Data.Aeson.Types.ToJSON 3ee14df177579d55425d9e7cfcbb4d54
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:Data.Proxy d7f87a37cf7ec5ca87c59c8d2859031f
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.Generics 1dbec2bc7dd1c5bd8c89ed857eaed19b
import  -/  base-4.9.1.0:GHC.IO eb504c57b397cf133849f8586f15dafb
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  filepath-1.4.1.1@filepath-1.4.1.1:System.FilePath a3d1d13ac7dd86705b5dfaf58a5c0b9e
import  -/  filepath-1.4.1.1@filepath-1.4.1.1:System.FilePath.Posix 6a5e3ee74184fdcc5da09a368e7c40f5
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.API.Alternative 6b95b68acf23198b9e878bdb464f3c90
import  -/  servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.API.ContentTypes 180a1639fd87357e7643de6b3a04be1d
import  -/  servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.API.Raw b6183039ddddff4d4700cd004c31108b
import  -/  servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.API.ReqBody 6531f1707b790af668580ace9eb089eb
import  -/  servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.API.Sub bfef96531ff8d828e20438fa057339d7
import  -/  servant-0.9.1.1@servant-0.9.1.1-ANMR2Ly77UJKZyQDBmKLKX:Servant.API.Verbs 4239ef79c6a7c4edc2ecc6582a8c2c9d
import  -/  servant-js-0.9.3@servant-js-0.9.3-73TPDkcPUPpJiKWa4R5jN4:Servant.JS bf18950678d932da91e21e9d460c5348
import  -/  servant-js-0.9.3@servant-js-0.9.3-73TPDkcPUPpJiKWa4R5jN4:Servant.JS.Vanilla a1cdd3f7bd9029040cc3adbe8cf538d1
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-DPVuwEqPtiRDtXTIGiBJmY:Servant efeda4c8d61b98d6a0ee96cbc0c0869b
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-DPVuwEqPtiRDtXTIGiBJmY:Servant.Server f8cd673ddf59c183c984b18f22f2c952
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-DPVuwEqPtiRDtXTIGiBJmY:Servant.Server.Internal 2fd942d2137cd32adf2eedafc15aee8e
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-DPVuwEqPtiRDtXTIGiBJmY:Servant.Utils.StaticFiles 972e8b03c2a69488ba5022ea573103c6
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM 3662559905a40ae5adbc3e935ac706c8
import  -/  warp-3.2.13@warp-3.2.13-HAkmfE8mH7WK3Wj46XjM7G:Network.Wai.Handler.Warp fa749cc9c593ab9137939db551e2e2e0
import  -/  warp-3.2.13@warp-3.2.13-HAkmfE8mH7WK3Wj46XjM7G:Network.Wai.Handler.Warp.Run bafdf2de3774063dd7e473651f15edb1
df72f2232f151d94fc10026fd2e64ba1
  $fFromJSONHabit :: Data.Aeson.Types.FromJSON.FromJSON Main.Habit
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Habit
                  Main.$fFromJSONHabit_$cparseJSON
                  Main.$fFromJSONHabit_$cparseJSONList -}
df72f2232f151d94fc10026fd2e64ba1
  $fFromJSONHabit1 ::
    [Data.Aeson.Types.Internal.Parser Main.Habit]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Main.Habit] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
9eb48a12df8f96d3139a59217e55d2d5
  $fFromJSONHabit10 :: GHC.Generics.R:SingSymbols "habitMotivation"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "habitMotivation"
                   Main.$fFromJSONHabit11
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"habitMotivation">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"habitMotivation">_N))) -}
d0747924506364fb61e4c69f42a971cf
  $fFromJSONHabit11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "habitMotivation"#) -}
6fd4c86521899548d8186037f2855dbc
  $fFromJSONHabit12 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [GHC.Types.Char]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Main.$fFromJSONHabit_$s$fFromJSON[]1
                   @ a1
                   w3) -}
ac6746fbd2a89c6403f60817c90505f7
  $fFromJSONHabit13 ::
    GHC.Generics.SingI ('GHC.Base.Just "habitName")
  {- Unfolding: InlineRule (0, True, True)
                Main.$fFromJSONHabit14
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "habitName">_N) -}
821c62d1b27b33c58c8fc136311a71f7
  $fFromJSONHabit14 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "habitName")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "habitName")
                   @ "habitName"
                   @~ <'GHC.Base.Just "habitName">_N
                   Main.$fFromJSONHabit15
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"habitName">_N)) -}
6e58d36a4aff152b253c4b393dfe11fd
  $fFromJSONHabit15 :: GHC.Generics.R:SingSymbols "habitName"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "habitName"
                   Main.$fFromJSONHabit16
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"habitName">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"habitName">_N))) -}
50174d835d9aca397e7f6f329bf3eaba
  $fFromJSONHabit16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "habitName"#) -}
5820acf061d4937fa891cf3bbb35a167
  $fFromJSONHabit17 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ GHC.Integer.Type.Integer
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONInteger
                   @ a1
                   w3) -}
458954b21dfa7a9f1c6325f45fab730b
  $fFromJSONHabit18 :: GHC.Generics.SingI ('GHC.Base.Just "habitId")
  {- Unfolding: InlineRule (0, True, True)
                Main.$fFromJSONHabit19
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "habitId">_N) -}
7cad12b41f8d6a123890aa0f7974af0a
  $fFromJSONHabit19 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "habitId")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "habitId")
                   @ "habitId"
                   @~ <'GHC.Base.Just "habitId">_N
                   Main.$fFromJSONHabit20
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"habitId">_N)) -}
b19c3eccc63cbce935c900df60877d08
  $fFromJSONHabit2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
11527f4e53b9369f878b6b4980a61041
  $fFromJSONHabit20 :: GHC.Generics.R:SingSymbols "habitId"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "habitId"
                   Main.$fFromJSONHabit21
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"habitId">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"habitId">_N))) -}
d27269ddf2120deadad6a231b1824b0a
  $fFromJSONHabit21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "habitId"#) -}
99dc059972e42e0db66d0cf974e01032
  $fFromJSONHabit3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData "Habit" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "habitId")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "habitName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "habitMotivation")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "habitChain")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe [Main.LogItem])))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "habitId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "habitName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "habitMotivation")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "habitChain")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0
                                                    (GHC.Base.Maybe [Main.LogItem])))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "habitId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "habitName")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "habitMotivation")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "habitChain")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe [Main.LogItem])))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "habitId")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "habitId")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel3
                                Main.$fFromJSONHabit17
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Integer.Type.Integer>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "habitName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "habitName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel2
                                Main.$fFromJSONHabit12
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            m2 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "habitMotivation")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                                       a1)
                            = Data.Aeson.Types.FromJSON.$w$cparseRecord1
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "habitMotivation")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ [GHC.Types.Char]
                                @ Data.Aeson.Types.Generic.Zero
                                @ GHC.Generics.R
                                Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel1
                                Main.$fFromJSONHabit_$s$fFromJSON[]1
                                @ a1
                                wild
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "habitChain")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 (GHC.Base.Maybe [Main.LogItem]))
                                       a1)
                            = Data.Aeson.Types.FromJSON.$w$cparseRecord1
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "habitChain")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ [Main.LogItem]
                                @ Data.Aeson.Types.Generic.Zero
                                @ GHC.Generics.R
                                Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel
                                Main.$fFromJSONHabit_$s$fFromJSON[]
                                @ a1
                                wild
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "habitId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "habitName")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Base.String))
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "habitMotivation")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "habitChain")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                (GHC.Base.Maybe [Main.LogItem])))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "habitId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "habitId")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                         a1) ->
                              e `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "habitName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a3 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "habitName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                            a1) ->
                                 let {
                                   a4 :: (GHC.Generics.:*:)
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "habitId")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "habitName")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           a1
                                     {- Strictness: m -}
                                   = GHC.Generics.:*:
                                       @ (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "habitId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                       @ (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "habitName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                                       @ a1
                                       a2
                                       a3
                                 } in
                                 m2
                                   `cast`
                                 (Data.Aeson.Types.Internal.N:Parser[0]
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "habitMotivation")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                                         a1>_R)
                                   @ f
                                   @ r
                                   path
                                   kf
                                   (\ (a5 :: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "habitMotivation")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                                               a1) ->
                                    e1
                                      `cast`
                                    (Data.Aeson.Types.Internal.N:Parser[0]
                                         <GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "habitChain")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 (GHC.Base.Maybe [Main.LogItem]))
                                            a1>_R)
                                      @ f
                                      @ r
                                      path
                                      kf
                                      (\ (a6 :: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "habitChain")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0
                                                     (GHC.Base.Maybe [Main.LogItem]))
                                                  a1) ->
                                       ks
                                         (GHC.Generics.:*:
                                            @ (GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "habitId")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                               GHC.Generics.:*: GHC.Generics.S1
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "habitName")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.Rec0
                                                                     GHC.Base.String))
                                            @ (GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "habitMotivation")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0
                                                    (GHC.Base.Maybe GHC.Base.String))
                                               GHC.Generics.:*: GHC.Generics.S1
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "habitChain")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.Rec0
                                                                     (GHC.Base.Maybe
                                                                        [Main.LogItem])))
                                            @ a1
                                            a4
                                            (GHC.Generics.:*:
                                               @ (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "habitMotivation")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0
                                                       (GHC.Base.Maybe GHC.Base.String)))
                                               @ (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "habitChain")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0
                                                       (GHC.Base.Maybe [Main.LogItem])))
                                               @ a1
                                               a5
                                               a6)))))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "habitId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "habitName")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "habitMotivation")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "habitChain")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0
                                                              (GHC.Base.Maybe [Main.LogItem])))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData "Habit" "Main" "main" 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   ((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "habitId")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "habitName")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Base.String))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "habitMotivation")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0
                                                           (GHC.Base.Maybe GHC.Base.String))
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "habitChain")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            (GHC.Base.Maybe
                                                                               [Main.LogItem])))))
                                a1)
                             f5
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "habitName")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitMotivation")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "habitChain")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 (GHC.Base.Maybe [Main.LogItem])))
                          a1>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "habitId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "habitName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "habitMotivation")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "habitChain")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0
                                                       (GHC.Base.Maybe [Main.LogItem])))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <(GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "habitId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "habitName")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String))
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "habitMotivation")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0
                                                              (GHC.Base.Maybe GHC.Base.String))
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "habitChain")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               (GHC.Base.Maybe
                                                                                  [Main.LogItem])))>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "Habit" "Main" "main" 'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "habitId")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                           GHC.Generics.:*: GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "habitName")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Base.String))
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "habitMotivation")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 (GHC.Base.Maybe GHC.Base.String))
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "habitChain")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  (GHC.Base.Maybe
                                                                                     [Main.LogItem]))))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData "Habit" "Main" "main" 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "habitId")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "habitName")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "habitMotivation")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0
                                                         (GHC.Base.Maybe GHC.Base.String))
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "habitChain")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          (GHC.Base.Maybe
                                                                             [Main.LogItem])))))
                              a1>_R))) -}
10656097d194e6a2ef0f717f75acd5a8
  $fFromJSONHabit4 ::
    GHC.Generics.SingI ('GHC.Base.Just "habitChain")
  {- Unfolding: InlineRule (0, True, True)
                Main.$fFromJSONHabit5
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "habitChain">_N) -}
a441e33e21a47365eb5409a4fa16bfab
  $fFromJSONHabit5 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "habitChain")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "habitChain")
                   @ "habitChain"
                   @~ <'GHC.Base.Just "habitChain">_N
                   Main.$fFromJSONHabit6
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"habitChain">_N)) -}
ed0fe3e394afe18e8db7ae61a5ee2f1b
  $fFromJSONHabit6 :: GHC.Generics.R:SingSymbols "habitChain"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "habitChain"
                   Main.$fFromJSONHabit7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"habitChain">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"habitChain">_N))) -}
d4e22c534a57829c38ee13eb48030ea6
  $fFromJSONHabit7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "habitChain"#) -}
ce07545e4c039a321d9c7f9e6bedabd9
  $fFromJSONHabit8 ::
    GHC.Generics.SingI ('GHC.Base.Just "habitMotivation")
  {- Unfolding: InlineRule (0, True, True)
                Main.$fFromJSONHabit9
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "habitMotivation">_N) -}
aef1665a54dc3b0e1d3a57b344c87238
  $fFromJSONHabit9 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "habitMotivation")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "habitMotivation")
                   @ "habitMotivation"
                   @~ <'GHC.Base.Just "habitMotivation">_N
                   Main.$fFromJSONHabit10
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"habitMotivation">_N)) -}
df72f2232f151d94fc10026fd2e64ba1
  $fFromJSONHabit_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.Habit
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData "Habit" "Main" "main" 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                ((GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "habitId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "habitName")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "habitMotivation")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe GHC.Base.String))
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "habitChain")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         (GHC.Base.Maybe
                                                                            [Main.LogItem])))))
                             GHC.Prim.Any)
                   = Main.$fFromJSONHabit3
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success Main.Habit f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Main.Rep_Habit[0])) <GHC.Prim.Any>_N))
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Main.Habit GHC.Prim.Any) ->
                     ks (Main.$fFromJSONHabit_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Main.Habit>_R))) -}
df72f2232f151d94fc10026fd2e64ba1
  $fFromJSONHabit_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Main.Habit]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Main.Habit]
                        Main.$fFromJSONHabit2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Main.$fFromJSONHabit1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Main.$fFromJSONHabit_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Main.Habit]>_R)) } }) -}
df72f2232f151d94fc10026fd2e64ba1
  $fFromJSONHabit_$cto :: GHC.Generics.Rep Main.Habit x -> Main.Habit
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Main.Habit x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Main.Rep_Habit[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Habit" "Main" "main" 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "habitId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R GHC.Integer.Type.Integer)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "habitName")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "habitMotivation")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                (GHC.Base.Maybe GHC.Base.String))
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "habitChain")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 (GHC.Base.Maybe
                                                                                    [Main.LogItem]))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "habitId")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "habitName")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "habitMotivation")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             (GHC.Base.Maybe GHC.Base.String))
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "habitChain")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              (GHC.Base.Maybe
                                                                                 [Main.LogItem])))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 Main.Habit
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds5
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitMotivation")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe GHC.Base.String)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Base.String>_R <x>_P))
                   ds6
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitChain")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (GHC.Base.Maybe [Main.LogItem])>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P
                             <GHC.Base.Maybe [Main.LogItem]>_R
                             <x>_P)) } } }) -}
dc159a5e05787360282fbd68f5575ef3
  $fFromJSONHabit_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [Main.LogItem]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Main.LogItem]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ Main.LogItem
                     Main.$fFromJSONLogItem)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ Main.LogItem
                     Main.$fFromJSONLogItem) -}
cf477236e0159bdadd9c35011cf72b45
  $fFromJSONHabit_$s$fFromJSON[]1 ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar) -}
4b52f7eb941ccf4f9381f24645b83bc1
  $fFromJSONHabit_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "habitChain")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "habitChain")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "habitChain")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "habitChain")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "habitChain")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
b12adeab013fe6e32f552d74735088a7
  $fFromJSONHabit_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "habitMotivation")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "habitMotivation")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "habitMotivation")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "habitMotivation")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "habitMotivation")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit8
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
102059b3bda4d1e3294bff6b5e6856ca
  $fFromJSONHabit_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "habitName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "habitName")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "habitName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "habitName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "habitName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
acfad0ebadbc0365363fc518e437de43
  $fFromJSONHabit_$s$fSelectorMetaMetaSel3 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "habitId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "habitId")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName3
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "habitId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit18
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "habitId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit18
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "habitId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONHabit18
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
9606a10eba504ad7996ca2360dc49bc4
  $fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "habitChain")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitChain")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Main.$fFromJSONHabit7) -}
b9d8bc211ae1280836eced4c24a6647d
  $fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "habitMotivation")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitMotivation")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Main.$fFromJSONHabit11) -}
c702ecc840ec42b2704eaf87a3f611af
  $fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "habitName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Main.$fFromJSONHabit16) -}
a4bb98240bd584aa30cb71114479d008
  $fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName3 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "habitId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Main.$fFromJSONHabit21) -}
df72f2232f151d94fc10026fd2e64ba1
  $fFromJSONHabit_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Main.Habit]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
372a9bc1b876980640cb96e463fd2a7b
  $fFromJSONLogItem ::
    Data.Aeson.Types.FromJSON.FromJSON Main.LogItem
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.LogItem
                  Main.$fFromJSONLogItem_$cparseJSON
                  Main.$fFromJSONLogItem_$cparseJSONList -}
372a9bc1b876980640cb96e463fd2a7b
  $fFromJSONLogItem1 ::
    [Data.Aeson.Types.Internal.Parser Main.LogItem]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Main.LogItem] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
a1206596d51fc866f073093759de4345
  $fFromJSONLogItem10 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "logDate")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "logDate")
                   @ "logDate"
                   @~ <'GHC.Base.Just "logDate">_N
                   Main.$fFromJSONLogItem11
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"logDate">_N)) -}
8ec15702e48258f5e672a834568be34d
  $fFromJSONLogItem11 :: GHC.Generics.R:SingSymbols "logDate"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "logDate"
                   Main.$fFromJSONLogItem12
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"logDate">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"logDate">_N))) -}
833340d516d89a8da78dcaf6ab0db327
  $fFromJSONLogItem12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "logDate"#) -}
a16bd9d4035c88766c52884c131ba627
  $fFromJSONLogItem2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData "LogItem" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "logDate")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "logStatus")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Main.LogStatus)))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "logDate")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day)))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "logStatus")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Main.LogStatus))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "logDate")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day)))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "logStatus")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Main.LogStatus))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "logDate")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "logDate")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1
                                     GHC.Generics.R (Main.Year, Main.Month, Main.Day))
                                Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel1
                                Main.$fFromJSONLogItem8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1
                                             GHC.Generics.R (Main.Year, Main.Month, Main.Day)>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "logStatus")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 Main.LogStatus)
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "logStatus")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R Main.LogStatus)
                                Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel
                                Main.$fFromJSONLogItem3
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R Main.LogStatus>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "logDate")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day)))
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "logStatus")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 Main.LogStatus))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "logDate")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "logDate")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                                         a1) ->
                              e `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "logStatus")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 Main.LogStatus)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a3 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "logStatus")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 Main.LogStatus)
                                            a1) ->
                                 ks
                                   (GHC.Generics.:*:
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "logDate")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day)))
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "logStatus")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 Main.LogStatus))
                                      @ a1
                                      a2
                                      a3))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "logDate")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day)))
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "logStatus")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 Main.LogStatus))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData "LogItem" "Main" "main" 'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "logDate")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "logStatus")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 Main.LogStatus)))
                                a1)
                             f5
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "logDate")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day)))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "logStatus")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Main.LogStatus))
                          a1>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "logDate")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day)))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "logStatus")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Main.LogStatus))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "logDate")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                                       GHC.Generics.:*: GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "logStatus")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0 Main.LogStatus)>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "LogItem" "Main" "main" 'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "logDate")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "logStatus")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                Main.LogStatus))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData "LogItem" "Main" "main" 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "logDate")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "logStatus")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 Main.LogStatus)))
                              a1>_R))) -}
b8b69f16ea75f8357ed973d6588358e8
  $fFromJSONLogItem3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R Main.LogStatus a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ Main.LogStatus
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Main.$fFromJSONLogStatus
                   @ a1
                   w3) -}
e8c1b12fd7f5fa8293575c5113c71d68
  $fFromJSONLogItem4 ::
    GHC.Generics.SingI ('GHC.Base.Just "logStatus")
  {- Unfolding: InlineRule (0, True, True)
                Main.$fFromJSONLogItem5
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "logStatus">_N) -}
234e97439385527400a2b40b8816aa60
  $fFromJSONLogItem5 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "logStatus")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "logStatus")
                   @ "logStatus"
                   @~ <'GHC.Base.Just "logStatus">_N
                   Main.$fFromJSONLogItem6
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"logStatus">_N)) -}
dc5384e578fa3f4699412cb98b877917
  $fFromJSONLogItem6 :: GHC.Generics.R:SingSymbols "logStatus"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "logStatus"
                   Main.$fFromJSONLogItem7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"logStatus">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"logStatus">_N))) -}
7574141c0a2768fbe97b9709d73988c0
  $fFromJSONLogItem7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "logStatus"#) -}
7a39af10344d50649e44d7f223afb621
  $fFromJSONLogItem8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1
            GHC.Generics.R (Main.Year, Main.Month, Main.Day) a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ (Main.Year, Main.Month, Main.Day)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Main.$fFromJSONLogItem_$s$fFromJSON(,,)
                   @ a1
                   w3) -}
1ae00bb5dba3a087dbba4e26ed244c21
  $fFromJSONLogItem9 :: GHC.Generics.SingI ('GHC.Base.Just "logDate")
  {- Unfolding: InlineRule (0, True, True)
                Main.$fFromJSONLogItem10
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "logDate">_N) -}
372a9bc1b876980640cb96e463fd2a7b
  $fFromJSONLogItem_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.LogItem
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData "LogItem" "Main" "main" 'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "logDate")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "logStatus")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 Main.LogStatus)))
                             GHC.Prim.Any)
                   = Main.$fFromJSONLogItem2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success Main.LogItem f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Main.Rep_LogItem[0])) <GHC.Prim.Any>_N))
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Main.LogItem GHC.Prim.Any) ->
                     ks
                       (case a1
                               `cast`
                             (Trans
                                  (Sub (Main.Rep_LogItem[0]))
                                  (Trans
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.D>_P
                                            <'GHC.Generics.MetaData
                                               "LogItem" "Main" "main" 'GHC.Types.False>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "logDate")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     (Main.Year, Main.Month, Main.Day))
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "logStatus")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Main.LogStatus))>_R)
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.C>_P
                                            <'GHC.Generics.MetaCons
                                               "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "logDate")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R (Main.Year, Main.Month, Main.Day))
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "logStatus")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Main.LogStatus)>_R)) <GHC.Prim.Any>_N) of wild { GHC.Generics.:*: ds ds1 ->
                        Main.LogItem
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "logDate")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R
                                       (Main.Year, Main.Month, Main.Day)>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P
                                    <(Main.Year, Main.Month, Main.Day)>_R
                                    <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "logStatus")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R Main.LogStatus>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <Main.LogStatus>_R <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Main.LogItem>_R))) -}
372a9bc1b876980640cb96e463fd2a7b
  $fFromJSONLogItem_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Main.LogItem]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Main.LogItem]
                        Main.$fFromJSONHabit2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Main.$fFromJSONLogItem1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Main.$fFromJSONLogItem_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Main.LogItem]>_R)) } }) -}
2f9d0d43840f65bc45173641717ecfbc
  $fFromJSONLogItem_$s$fFromJSON(,,) ::
    Data.Aeson.Types.FromJSON.FromJSON
      (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
       GHC.Integer.Type.Integer)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                     GHC.Integer.Type.Integer)
                  (GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (Data.Aeson.Types.Internal.Array
                        -> Data.Aeson.Types.Internal.Parser
                             (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                              GHC.Integer.Type.Integer))
                     @ (Data.Aeson.Types.Internal.Value
                        -> Data.Aeson.Types.Internal.Parser
                             (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                              GHC.Integer.Type.Integer))
                     (Data.Aeson.Types.FromJSON.withArray
                        @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                           GHC.Integer.Type.Integer)
                        (GHC.Base.build
                           @ GHC.Types.Char
                           (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "(a, b, c)"#)))
                     (\ (t :: Data.Aeson.Types.Internal.Array) ->
                      let {
                        n :: GHC.Types.Int = Main.$fFromJSONLogItem_$slength t
                      } in
                      case GHC.Classes.eqInt n (GHC.Types.I# 3#) of wild {
                        GHC.Types.False
                        -> GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ GHC.Base.String
                             @ (Data.Aeson.Types.Internal.Parser
                                  (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                   GHC.Integer.Type.Integer))
                             (Data.Aeson.Types.Internal.$fMonadFailParser_$cfail
                                @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                   GHC.Integer.Type.Integer))
                             (GHC.Base.build
                                @ GHC.Types.Char
                                (\ @ b1
                                   (c1 :: GHC.Types.Char -> b1 -> b1)[OneShot]
                                   (n1 :: b1)[OneShot] ->
                                 GHC.CString.unpackFoldrCString#
                                   @ b1
                                   "cannot unpack array of length "#
                                   c1
                                   (GHC.Base.foldr
                                      @ GHC.Types.Char
                                      @ b1
                                      c1
                                      (GHC.CString.unpackFoldrCString#
                                         @ b1
                                         " into a tuple of length 3"#
                                         c1
                                         n1)
                                      (GHC.Show.$fShowInt_$cshow n))))
                        GHC.Types.True
                        -> let {
                             d :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Integer.Type.Integer
                                     -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                         GHC.Integer.Type.Integer))
                             = let {
                                 d1 :: Data.Aeson.Types.Internal.Parser GHC.Integer.Type.Integer
                                 = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                     @ GHC.Integer.Type.Integer
                                     Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON4
                                     (GHC.Types.I# 0#)
                                     t
                               } in
                               let {
                                 d2 :: Data.Aeson.Types.Internal.Parser
                                         (GHC.Integer.Type.Integer
                                          -> GHC.Integer.Type.Integer
                                          -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                              GHC.Integer.Type.Integer))
                                   {- Arity: 3 -}
                                 = Data.Aeson.Types.FromJSON.$fFromJSON(,)_$s<$>
                                     @ GHC.Integer.Type.Integer
                                     @ (GHC.Integer.Type.Integer
                                        -> GHC.Integer.Type.Integer
                                        -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                            GHC.Integer.Type.Integer))
                                     (GHC.Tuple.(,,)
                                        @ GHC.Integer.Type.Integer
                                        @ GHC.Integer.Type.Integer
                                        @ GHC.Integer.Type.Integer)
                                     d1
                               } in
                               let {
                                 e :: Data.Aeson.Types.Internal.Parser GHC.Integer.Type.Integer
                                 = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                     @ GHC.Integer.Type.Integer
                                     Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON4
                                     (GHC.Types.I# 1#)
                                     t
                               } in
                               GHC.Base.$
                                 @ 'GHC.Types.PtrRepLifted
                                 @ (forall (f :: * -> *) r.
                                    Data.Aeson.Types.Internal.JSONPath
                                    -> Data.Aeson.Types.Internal.Failure f r
                                    -> Data.Aeson.Types.Internal.Success
                                         (GHC.Integer.Type.Integer
                                          -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                              GHC.Integer.Type.Integer))
                                         f
                                         r
                                    -> f r)
                                 @ (Data.Aeson.Types.Internal.Parser
                                      (GHC.Integer.Type.Integer
                                       -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                           GHC.Integer.Type.Integer)))
                                 (\ (tpl :: forall (f :: * -> *) r.
                                            Data.Aeson.Types.Internal.JSONPath
                                            -> Data.Aeson.Types.Internal.Failure f r
                                            -> Data.Aeson.Types.Internal.Success
                                                 (GHC.Integer.Type.Integer
                                                  -> (GHC.Integer.Type.Integer,
                                                      GHC.Integer.Type.Integer,
                                                      GHC.Integer.Type.Integer))
                                                 f
                                                 r
                                            -> f r) ->
                                  tpl)
                                   `cast`
                                 (<forall (f :: * -> *) r.
                                   Data.Aeson.Types.Internal.JSONPath
                                   -> Data.Aeson.Types.Internal.Failure f r
                                   -> Data.Aeson.Types.Internal.Success
                                        (GHC.Integer.Type.Integer
                                         -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                             GHC.Integer.Type.Integer))
                                        f
                                        r
                                   -> f r>_R
                                  ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                <GHC.Integer.Type.Integer
                                                 -> (GHC.Integer.Type.Integer,
                                                     GHC.Integer.Type.Integer,
                                                     GHC.Integer.Type.Integer)>_R))
                                 (\ @ (f :: * -> *)
                                    @ r
                                    (path :: Data.Aeson.Types.Internal.JSONPath)
                                    (kf :: Data.Aeson.Types.Internal.Failure f r)
                                    (ks :: Data.Aeson.Types.Internal.Success
                                             (GHC.Integer.Type.Integer
                                              -> (GHC.Integer.Type.Integer,
                                                  GHC.Integer.Type.Integer,
                                                  GHC.Integer.Type.Integer))
                                             f
                                             r) ->
                                  Data.Aeson.Types.Internal.runParser
                                    @ (GHC.Integer.Type.Integer
                                       -> GHC.Integer.Type.Integer
                                       -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                           GHC.Integer.Type.Integer))
                                    d2
                                    @ f
                                    @ r
                                    path
                                    kf
                                    (\ (a1 :: GHC.Integer.Type.Integer
                                              -> GHC.Integer.Type.Integer
                                              -> (GHC.Integer.Type.Integer,
                                                  GHC.Integer.Type.Integer,
                                                  GHC.Integer.Type.Integer)) ->
                                     Data.Aeson.Types.Internal.runParser
                                       @ (GHC.Integer.Type.Integer
                                          -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                              GHC.Integer.Type.Integer))
                                       (GHC.Base.$
                                          @ 'GHC.Types.PtrRepLifted
                                          @ (forall (f5 :: * -> *) r1.
                                             Data.Aeson.Types.Internal.JSONPath
                                             -> Data.Aeson.Types.Internal.Failure f5 r1
                                             -> Data.Aeson.Types.Internal.Success
                                                  (GHC.Integer.Type.Integer
                                                   -> (GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer))
                                                  f5
                                                  r1
                                             -> f5 r1)
                                          @ (Data.Aeson.Types.Internal.Parser
                                               (GHC.Integer.Type.Integer
                                                -> (GHC.Integer.Type.Integer,
                                                    GHC.Integer.Type.Integer,
                                                    GHC.Integer.Type.Integer)))
                                          (\ (tpl :: forall (f5 :: * -> *) r1.
                                                     Data.Aeson.Types.Internal.JSONPath
                                                     -> Data.Aeson.Types.Internal.Failure f5 r1
                                                     -> Data.Aeson.Types.Internal.Success
                                                          (GHC.Integer.Type.Integer
                                                           -> (GHC.Integer.Type.Integer,
                                                               GHC.Integer.Type.Integer,
                                                               GHC.Integer.Type.Integer))
                                                          f5
                                                          r1
                                                     -> f5 r1) ->
                                           tpl)
                                            `cast`
                                          (<forall (f5 :: * -> *) r1.
                                            Data.Aeson.Types.Internal.JSONPath
                                            -> Data.Aeson.Types.Internal.Failure f5 r1
                                            -> Data.Aeson.Types.Internal.Success
                                                 (GHC.Integer.Type.Integer
                                                  -> (GHC.Integer.Type.Integer,
                                                      GHC.Integer.Type.Integer,
                                                      GHC.Integer.Type.Integer))
                                                 f5
                                                 r1
                                            -> f5 r1>_R
                                           ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                         <GHC.Integer.Type.Integer
                                                          -> (GHC.Integer.Type.Integer,
                                                              GHC.Integer.Type.Integer,
                                                              GHC.Integer.Type.Integer)>_R))
                                          (\ @ (f5 :: * -> *)
                                             @ r1
                                             (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                             (kf1 :: Data.Aeson.Types.Internal.Failure f5 r1)
                                             (ks1 :: Data.Aeson.Types.Internal.Success
                                                       (GHC.Integer.Type.Integer
                                                        -> (GHC.Integer.Type.Integer,
                                                            GHC.Integer.Type.Integer,
                                                            GHC.Integer.Type.Integer))
                                                       f5
                                                       r1) ->
                                           Data.Aeson.Types.Internal.runParser
                                             @ GHC.Integer.Type.Integer
                                             e
                                             @ f5
                                             @ r1
                                             path1
                                             kf1
                                             (\ (a2 :: GHC.Integer.Type.Integer) ->
                                              let {
                                                a3 :: GHC.Integer.Type.Integer
                                                      -> (GHC.Integer.Type.Integer,
                                                          GHC.Integer.Type.Integer,
                                                          GHC.Integer.Type.Integer)
                                                = a1 a2
                                              } in
                                              Data.Aeson.Types.Internal.runParser
                                                @ (GHC.Integer.Type.Integer
                                                   -> (GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer))
                                                (GHC.Base.$
                                                   @ 'GHC.Types.PtrRepLifted
                                                   @ (forall (f6 :: * -> *) r2.
                                                      Data.Aeson.Types.Internal.JSONPath
                                                      -> Data.Aeson.Types.Internal.Failure f6 r2
                                                      -> Data.Aeson.Types.Internal.Success
                                                           (GHC.Integer.Type.Integer
                                                            -> (GHC.Integer.Type.Integer,
                                                                GHC.Integer.Type.Integer,
                                                                GHC.Integer.Type.Integer))
                                                           f6
                                                           r2
                                                      -> f6 r2)
                                                   @ (Data.Aeson.Types.Internal.Parser
                                                        (GHC.Integer.Type.Integer
                                                         -> (GHC.Integer.Type.Integer,
                                                             GHC.Integer.Type.Integer,
                                                             GHC.Integer.Type.Integer)))
                                                   (\ (tpl :: forall (f6 :: * -> *) r2.
                                                              Data.Aeson.Types.Internal.JSONPath
                                                              -> Data.Aeson.Types.Internal.Failure
                                                                   f6 r2
                                                              -> Data.Aeson.Types.Internal.Success
                                                                   (GHC.Integer.Type.Integer
                                                                    -> (GHC.Integer.Type.Integer,
                                                                        GHC.Integer.Type.Integer,
                                                                        GHC.Integer.Type.Integer))
                                                                   f6
                                                                   r2
                                                              -> f6 r2) ->
                                                    tpl)
                                                     `cast`
                                                   (<forall (f6 :: * -> *) r2.
                                                     Data.Aeson.Types.Internal.JSONPath
                                                     -> Data.Aeson.Types.Internal.Failure f6 r2
                                                     -> Data.Aeson.Types.Internal.Success
                                                          (GHC.Integer.Type.Integer
                                                           -> (GHC.Integer.Type.Integer,
                                                               GHC.Integer.Type.Integer,
                                                               GHC.Integer.Type.Integer))
                                                          f6
                                                          r2
                                                     -> f6 r2>_R
                                                    ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                  <GHC.Integer.Type.Integer
                                                                   -> (GHC.Integer.Type.Integer,
                                                                       GHC.Integer.Type.Integer,
                                                                       GHC.Integer.Type.Integer)>_R))
                                                   (\ @ (f6 :: * -> *)
                                                      @ r2
                                                      (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                      (_kf :: Data.Aeson.Types.Internal.Failure
                                                                f6 r2)
                                                      (ks2 :: Data.Aeson.Types.Internal.Success
                                                                (GHC.Integer.Type.Integer
                                                                 -> (GHC.Integer.Type.Integer,
                                                                     GHC.Integer.Type.Integer,
                                                                     GHC.Integer.Type.Integer))
                                                                f6
                                                                r2) ->
                                                    ks2 a3))
                                                @ f5
                                                @ r1
                                                path1
                                                kf1
                                                ks1)))
                                       @ f
                                       @ r
                                       path
                                       kf
                                       ks))
                           } in
                           let {
                             e :: Data.Aeson.Types.Internal.Parser GHC.Integer.Type.Integer
                             = Data.Aeson.Types.FromJSON.parseJSONElemAtIndex
                                 @ GHC.Integer.Type.Integer
                                 Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON4
                                 (GHC.Types.I# 2#)
                                 t
                           } in
                           GHC.Base.$
                             @ 'GHC.Types.PtrRepLifted
                             @ (forall (f :: * -> *) r.
                                Data.Aeson.Types.Internal.JSONPath
                                -> Data.Aeson.Types.Internal.Failure f r
                                -> Data.Aeson.Types.Internal.Success
                                     (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                      GHC.Integer.Type.Integer)
                                     f
                                     r
                                -> f r)
                             @ (Data.Aeson.Types.Internal.Parser
                                  (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                   GHC.Integer.Type.Integer))
                             (\ (tpl :: forall (f :: * -> *) r.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f r
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                              GHC.Integer.Type.Integer)
                                             f
                                             r
                                        -> f r) ->
                              tpl)
                               `cast`
                             (<forall (f :: * -> *) r.
                               Data.Aeson.Types.Internal.JSONPath
                               -> Data.Aeson.Types.Internal.Failure f r
                               -> Data.Aeson.Types.Internal.Success
                                    (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                     GHC.Integer.Type.Integer)
                                    f
                                    r
                               -> f r>_R
                              ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                            <(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                              GHC.Integer.Type.Integer)>_R))
                             (\ @ (f :: * -> *)
                                @ r
                                (path :: Data.Aeson.Types.Internal.JSONPath)
                                (kf :: Data.Aeson.Types.Internal.Failure f r)
                                (ks :: Data.Aeson.Types.Internal.Success
                                         (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                          GHC.Integer.Type.Integer)
                                         f
                                         r) ->
                              Data.Aeson.Types.Internal.runParser
                                @ (GHC.Integer.Type.Integer
                                   -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                       GHC.Integer.Type.Integer))
                                d
                                @ f
                                @ r
                                path
                                kf
                                (\ (a1 :: GHC.Integer.Type.Integer
                                          -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                              GHC.Integer.Type.Integer)) ->
                                 Data.Aeson.Types.Internal.runParser
                                   @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                      GHC.Integer.Type.Integer)
                                   (GHC.Base.$
                                      @ 'GHC.Types.PtrRepLifted
                                      @ (forall (f5 :: * -> *) r1.
                                         Data.Aeson.Types.Internal.JSONPath
                                         -> Data.Aeson.Types.Internal.Failure f5 r1
                                         -> Data.Aeson.Types.Internal.Success
                                              (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                               GHC.Integer.Type.Integer)
                                              f5
                                              r1
                                         -> f5 r1)
                                      @ (Data.Aeson.Types.Internal.Parser
                                           (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                            GHC.Integer.Type.Integer))
                                      (\ (tpl :: forall (f5 :: * -> *) r1.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f5 r1
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer)
                                                      f5
                                                      r1
                                                 -> f5 r1) ->
                                       tpl)
                                        `cast`
                                      (<forall (f5 :: * -> *) r1.
                                        Data.Aeson.Types.Internal.JSONPath
                                        -> Data.Aeson.Types.Internal.Failure f5 r1
                                        -> Data.Aeson.Types.Internal.Success
                                             (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                              GHC.Integer.Type.Integer)
                                             f5
                                             r1
                                        -> f5 r1>_R
                                       ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                     <(GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer)>_R))
                                      (\ @ (f5 :: * -> *)
                                         @ r1
                                         (path1 :: Data.Aeson.Types.Internal.JSONPath)
                                         (kf1 :: Data.Aeson.Types.Internal.Failure f5 r1)
                                         (ks1 :: Data.Aeson.Types.Internal.Success
                                                   (GHC.Integer.Type.Integer,
                                                    GHC.Integer.Type.Integer,
                                                    GHC.Integer.Type.Integer)
                                                   f5
                                                   r1) ->
                                       Data.Aeson.Types.Internal.runParser
                                         @ GHC.Integer.Type.Integer
                                         e
                                         @ f5
                                         @ r1
                                         path1
                                         kf1
                                         (\ (a2 :: GHC.Integer.Type.Integer) ->
                                          let {
                                            a3 :: (GHC.Integer.Type.Integer,
                                                   GHC.Integer.Type.Integer,
                                                   GHC.Integer.Type.Integer)
                                            = a1 a2
                                          } in
                                          Data.Aeson.Types.Internal.runParser
                                            @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer,
                                               GHC.Integer.Type.Integer)
                                            (GHC.Base.$
                                               @ 'GHC.Types.PtrRepLifted
                                               @ (forall (f6 :: * -> *) r2.
                                                  Data.Aeson.Types.Internal.JSONPath
                                                  -> Data.Aeson.Types.Internal.Failure f6 r2
                                                  -> Data.Aeson.Types.Internal.Success
                                                       (GHC.Integer.Type.Integer,
                                                        GHC.Integer.Type.Integer,
                                                        GHC.Integer.Type.Integer)
                                                       f6
                                                       r2
                                                  -> f6 r2)
                                               @ (Data.Aeson.Types.Internal.Parser
                                                    (GHC.Integer.Type.Integer,
                                                     GHC.Integer.Type.Integer,
                                                     GHC.Integer.Type.Integer))
                                               (\ (tpl :: forall (f6 :: * -> *) r2.
                                                          Data.Aeson.Types.Internal.JSONPath
                                                          -> Data.Aeson.Types.Internal.Failure f6 r2
                                                          -> Data.Aeson.Types.Internal.Success
                                                               (GHC.Integer.Type.Integer,
                                                                GHC.Integer.Type.Integer,
                                                                GHC.Integer.Type.Integer)
                                                               f6
                                                               r2
                                                          -> f6 r2) ->
                                                tpl)
                                                 `cast`
                                               (<forall (f6 :: * -> *) r2.
                                                 Data.Aeson.Types.Internal.JSONPath
                                                 -> Data.Aeson.Types.Internal.Failure f6 r2
                                                 -> Data.Aeson.Types.Internal.Success
                                                      (GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer,
                                                       GHC.Integer.Type.Integer)
                                                      f6
                                                      r2
                                                 -> f6 r2>_R
                                                ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                              <(GHC.Integer.Type.Integer,
                                                                GHC.Integer.Type.Integer,
                                                                GHC.Integer.Type.Integer)>_R))
                                               (\ @ (f6 :: * -> *)
                                                  @ r2
                                                  (_path :: Data.Aeson.Types.Internal.JSONPath)
                                                  (_kf :: Data.Aeson.Types.Internal.Failure f6 r2)
                                                  (ks2 :: Data.Aeson.Types.Internal.Success
                                                            (GHC.Integer.Type.Integer,
                                                             GHC.Integer.Type.Integer,
                                                             GHC.Integer.Type.Integer)
                                                            f6
                                                            r2) ->
                                                ks2 a3))
                                            @ f5
                                            @ r1
                                            path1
                                            kf1
                                            ks1)))
                                   @ f
                                   @ r
                                   path
                                   kf
                                   ks)) }))
                  (Data.Aeson.Types.FromJSON.$fFromJSON(,,)_$cparseJSONList
                     @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     Data.Aeson.Types.FromJSON.$fFromJSONInteger
                     Data.Aeson.Types.FromJSON.$fFromJSONInteger
                     Data.Aeson.Types.FromJSON.$fFromJSONInteger) -}
04e70fa44b11520750d3b1ffac4f8615
  $fFromJSONLogItem_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "logStatus")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "logStatus")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "logStatus")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONLogItem4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "logStatus")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONLogItem4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "logStatus")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONLogItem4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
8ef5978954e4c2806057d0585e0d808e
  $fFromJSONLogItem_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "logDate")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "logDate")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "logDate")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONLogItem9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "logDate")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONLogItem9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "logDate")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONLogItem9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
258c7bcea395d73ba9478f8cfdde2e46
  $fFromJSONLogItem_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "logStatus")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "logStatus")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Main.$fFromJSONLogItem7) -}
075ca687cdb07c2281cd9b430de528af
  $fFromJSONLogItem_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "logDate")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "logDate")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Main.$fFromJSONLogItem12) -}
03d2a3b129006766a440b41d7613c25b
  $fFromJSONLogItem_$slength ::
    Data.Vector.Vector Data.Aeson.Types.Internal.Value -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Inline: [NEVER] -}
372a9bc1b876980640cb96e463fd2a7b
  $fFromJSONLogItem_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Main.LogItem]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
38637d1ae37036cdd2876c628606e97a
  $fFromJSONLogStatus ::
    Data.Aeson.Types.FromJSON.FromJSON Main.LogStatus
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.LogStatus
                  Main.$fFromJSONLogStatus_$cparseJSON
                  Main.$fFromJSONLogStatus_$cparseJSONList -}
38637d1ae37036cdd2876c628606e97a
  $fFromJSONLogStatus1 ::
    [Data.Aeson.Types.Internal.Parser Main.LogStatus]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Main.LogStatus] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
5f8883e219ca28a08a8376b0f240541d
  $fFromJSONLogStatus10 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Main.$w$dFromTaggedObject
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
ce96a3516f201696af4fdc5b0c21819f
  $fFromJSONLogStatus11 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success (GHC.Generics.U1 a) f r
       -> f r
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (7, True, True)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a)
                   (contentsFieldName :: GHC.Base.String)
                   (x :: Data.Aeson.Types.Internal.Object)
                   @ (f :: * -> *)
                   @ r
                   (eta :: Data.Aeson.Types.Internal.JSONPath)
                   (eta1 :: Data.Aeson.Types.Internal.Failure f r)
                   (eta2 :: Data.Aeson.Types.Internal.Success
                              (GHC.Generics.U1 a) f r) ->
                 eta2 (GHC.Generics.U1 @ a)) -}
062a29c302ae92af9f5269bb25460c9e
  $fFromJSONLogStatus12 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Main.$w$dFromTaggedObject1
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
2142c5433f40f05dcb1bb2c4428911b1
  $fFromJSONLogStatus13 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Main.$w$dFromTaggedObject2
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
e695b4cbe6e7a84c691805abce07c466
  $fFromJSONLogStatus14 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   Main.$fFromJSONLogStatus19
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Main.$fFromJSONLogStatus15
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Skipped"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
671988e10e188e48986e6213da3d16b6
  $fFromJSONLogStatus15 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Main.$fFromJSONLogStatus18
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Main.$fFromJSONLogStatus16
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
35fefb4a1efe66a2ba37c2955fcc3349
  $fFromJSONLogStatus16 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Main.$w$dFromPair
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
43186bb1f12a8bab9fbad1826bde766e
  $fFromJSONLogStatus17 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser (GHC.Generics.U1 a)
  {- Arity: 3,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)><L,A><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a)
                   (v :: Data.Aeson.Types.Internal.Value) ->
                 case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                 case ds6 of wild1 { DEFAULT ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON3
                   @ Data.Aeson.Types.Generic.Zero
                   @ a
                   v } }) -}
fb70bddd1d656ec423f295514d0e54af
  $fFromJSONLogStatus18 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Main.$w$dFromPair1
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
e9ee86177a82c0a010e84ab36a95fcb8
  $fFromJSONLogStatus19 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Main.$w$dFromPair2
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
e7baf880622bf3cc3d6ae02e3d583d5e
  $fFromJSONLogStatus2 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData "LogStatus" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Skipped"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
            GHC.Prim.Any)
  {- Unfolding: (Main.$fFromJSONLogStatus3
                   @ GHC.Prim.Any
                   Data.Aeson.Types.Internal.defaultOptions
                   (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)) -}
bbc0981ede1ea43374409c44741ccc50
  $fFromJSONLogStatus20 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 2,
     Strictness: <S(LC(S)LLLL),1*U(A,C(U),A,A,A,A)><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Main.$w$dSumFromString @ a1 ww2 ww8 ww9 ww10 } }) -}
405b272ed99e67dec008715def5c724d
  $fFromJSONLogStatus3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData "LogStatus" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Skipped"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
            a1)
  {- Arity: 2, Strictness: <L,1*U(U,U,U,U,U,U)><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1) ->
                 let {
                   g :: Data.Aeson.Types.Internal.Value
                        -> Data.Tagged.Tagged
                             Data.Aeson.Types.Generic.True
                             (Data.Aeson.Types.Internal.Parser
                                ((GHC.Generics.:+:)
                                   (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                   (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Skipped"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1)
                                   a1))
                   = case opts of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                     Data.Aeson.Types.FromJSON.$w$cparseSum
                       @ (GHC.Generics.M1
                            GHC.Generics.C
                            ('GHC.Generics.MetaCons
                               "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1)
                       @ (GHC.Generics.C1
                            ('GHC.Generics.MetaCons
                               "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.C1
                                             ('GHC.Generics.MetaCons
                                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1)
                       @ Data.Aeson.Types.Generic.Zero
                       Main.$fFromJSONLogStatus20
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:SumFromString[0]
                                 <GHC.Types.*>_N
                                 <GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "NotCompleted"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Skipped"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       Main.$fFromJSONLogStatus14
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "NotCompleted"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Skipped"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       Main.$fFromJSONLogStatus8
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "NotCompleted"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Skipped"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       Main.$fFromJSONLogStatus4
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:FromUntaggedValue[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "NotCompleted"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Skipped"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       @ a1
                       ww1
                       ww2
                       ww3
                       ww4
                       ww5
                       ww6
                       fargs }
                 } in
                 \ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Tagged.Tagged
                          Data.Aeson.Types.Generic.True
                          (Data.Aeson.Types.Internal.Parser
                             ((GHC.Generics.:+:)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Skipped"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                a1))
                   = g x
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData "LogStatus" "Main" "main" 'GHC.Types.False)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: (GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "NotCompleted"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Skipped"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1))
                                a1)
                             f5
                             r) ->
                  m `cast`
                  (Trans
                       (Data.Tagged.N:Tagged[0]
                            <*>_N
                            <Data.Aeson.Types.Generic.True>_P
                            <Data.Aeson.Types.Internal.Parser
                               ((GHC.Generics.:+:)
                                  (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Skipped"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  a1)>_R)
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <(GHC.Generics.:+:)
                               (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1)
                               (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Skipped"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               a1>_R))
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:+:)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Skipped"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:M1[0]
                                 <GHC.Generics.D>_P
                                 <'GHC.Generics.MetaData
                                    "LogStatus" "Main" "main" 'GHC.Types.False>_P
                                 <GHC.Generics.C1
                                    ('GHC.Generics.MetaCons
                                       "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "NotCompleted"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Skipped"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_R) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData "LogStatus" "Main" "main" 'GHC.Types.False)
                              (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "NotCompleted"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "Skipped"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              a1>_R))) -}
f808f0766ac427203eda16daa7129e7a
  $fFromJSONLogStatus4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 3, Strictness: <L,U(A,C(U),A,A,A,A)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 Main.$w$dFromUntaggedValue @ a1 w w2) -}
9dd216b5fc5053be21d9960b58ccbd39
  $fFromJSONLogStatus5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Skipped"#) -}
811c05b08036b8b4b2983cc8bb20759d
  $fFromJSONLogStatus6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NotCompleted"#) -}
dbb9ab089436f00c68839a71b9562a97
  $fFromJSONLogStatus7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Completed"#) -}
04775922d40b3e348004eaaa047a8884
  $fFromJSONLogStatus8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   Main.$fFromJSONLogStatus13
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Main.$fFromJSONLogStatus9
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Skipped"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
d28f530a688cbb8b67e91adeafa4be0f
  $fFromJSONLogStatus9 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Main.$fFromJSONLogStatus12
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Main.$fFromJSONLogStatus10
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
38637d1ae37036cdd2876c628606e97a
  $fFromJSONLogStatus_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.LogStatus
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData "LogStatus" "Main" "main" 'GHC.Types.False)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "NotCompleted"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Skipped"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                             GHC.Prim.Any)
                   = Main.$fFromJSONLogStatus2 x
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success Main.LogStatus f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Main.Rep_LogStatus[0])) <GHC.Prim.Any>_N))
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Main.LogStatus GHC.Prim.Any) ->
                     ks (Main.$fFromJSONLogStatus_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <Main.LogStatus>_R))) -}
38637d1ae37036cdd2876c628606e97a
  $fFromJSONLogStatus_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Main.LogStatus]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Main.LogStatus]
                        Main.$fFromJSONHabit2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Main.$fFromJSONLogStatus1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Main.$fFromJSONLogStatus_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Main.LogStatus]>_R)) } }) -}
38637d1ae37036cdd2876c628606e97a
  $fFromJSONLogStatus_$cto ::
    GHC.Generics.Rep Main.LogStatus x -> Main.LogStatus
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Main.LogStatus x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Main.Rep_LogStatus[0]))
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "LogStatus" "Main" "main" 'GHC.Types.False>_P
                                <GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: (GHC.Generics.M1
                                                     GHC.Generics.C
                                                     ('GHC.Generics.MetaCons
                                                        "NotCompleted"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                      GHC.Generics.C
                                                                      ('GHC.Generics.MetaCons
                                                                         "Skipped"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1)>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of tpl { DEFAULT -> Main.Completed }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of tpl { DEFAULT -> Main.NotCompleted }
                        GHC.Generics.R1 ds2
                        -> case ds2 of tpl { DEFAULT -> Main.Skipped } } }) -}
c4500adcab5ee70d7cde776ac802dde9
  $fFromJSONLogStatus_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Skipped"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Main.$fFromJSONLogStatus5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Skipped">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Skipped">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Skipped"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Main.$fFromJSONLogStatus5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Skipped">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Skipped">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Skipped"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Main.$fFromJSONLogStatus5
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Skipped">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Skipped">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
8c167ee58086a1cfa4dad706b5cb9efe
  $fFromJSONLogStatus_$s$fConstructorMetaMetaCons1 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "NotCompleted"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Main.$fFromJSONLogStatus6
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"NotCompleted">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"NotCompleted">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "NotCompleted"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Main.$fFromJSONLogStatus6
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"NotCompleted">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"NotCompleted">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "NotCompleted"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Main.$fFromJSONLogStatus6
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"NotCompleted">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"NotCompleted">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
74dc56053739ee51910bdf0786b7bac5
  $fFromJSONLogStatus_$s$fConstructorMetaMetaCons2 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Completed"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Main.$fFromJSONLogStatus7
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Completed">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Completed">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Completed"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Main.$fFromJSONLogStatus7
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Completed">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Completed">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Completed"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Main.$fFromJSONLogStatus7
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Completed">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Completed">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
38637d1ae37036cdd2876c628606e97a
  $fFromJSONLogStatus_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Main.LogStatus]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
df72f2232f151d94fc10026fd2e64ba1
  $fGenericHabit :: GHC.Generics.Generic Main.Habit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Habit
                  Main.$fGenericHabit_$cfrom
                  Main.$fFromJSONHabit_$cto -}
df72f2232f151d94fc10026fd2e64ba1
  $fGenericHabit1 ::
    Main.Habit
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "habitId")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "habitName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "habitMotivation")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Base.String))
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "habitChain")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R (GHC.Base.Maybe [Main.LogItem]))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Main.Habit) ->
                 case x1 of wild { Main.Habit g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "habitId")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "habitName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "habitMotivation")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Base.String))
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "habitChain")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R (GHC.Base.Maybe [Main.LogItem])))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "habitId")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "habitName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "habitId")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "habitName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "habitMotivation")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Base.String)))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "habitChain")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe [Main.LogItem])))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "habitMotivation")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R (GHC.Base.Maybe GHC.Base.String)>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.Maybe [Main.LogItem]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "habitChain")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R
                                         (GHC.Base.Maybe [Main.LogItem])>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "habitId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "habitName")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "habitMotivation")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R (GHC.Base.Maybe GHC.Base.String))
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "habitChain")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    (GHC.Base.Maybe
                                                                       [Main.LogItem])))>_R) <x>_N) }) -}
df72f2232f151d94fc10026fd2e64ba1
  $fGenericHabit_$cfrom ::
    Main.Habit -> GHC.Generics.Rep Main.Habit x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Main.$fGenericHabit1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Main.Habit>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Habit" "Main" "main" 'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "habitId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "habitName")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "habitMotivation")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Base.Maybe GHC.Base.String))
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "habitChain")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                (GHC.Base.Maybe
                                                                                   [Main.LogItem]))))>_R))
                          (Sub (Sym (Main.Rep_Habit[0]))) <x>_N) -}
372a9bc1b876980640cb96e463fd2a7b
  $fGenericLogItem :: GHC.Generics.Generic Main.LogItem
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.LogItem
                  Main.$fGenericLogItem_$cfrom
                  Main.$fGenericLogItem_$cto -}
372a9bc1b876980640cb96e463fd2a7b
  $fGenericLogItem1 ::
    Main.LogItem
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "logDate")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R (Main.Year, Main.Month, Main.Day))
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "logStatus")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R Main.LogStatus))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Main.LogItem) ->
                 case x1 of wild { Main.LogItem g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "logDate")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R (Main.Year, Main.Month, Main.Day)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "logStatus")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Main.LogStatus))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <(Main.Year, Main.Month, Main.Day)>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "logDate")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R (Main.Year, Main.Month, Main.Day)>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <Main.LogStatus>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "logStatus")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R Main.LogStatus>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "logDate")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (Main.Year, Main.Month, Main.Day))
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "logStatus")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Main.LogStatus)>_R) <x>_N) }) -}
372a9bc1b876980640cb96e463fd2a7b
  $fGenericLogItem_$cfrom ::
    Main.LogItem -> GHC.Generics.Rep Main.LogItem x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Main.$fGenericLogItem1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Main.LogItem>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "LogItem" "Main" "main" 'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "logDate")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R (Main.Year, Main.Month, Main.Day))
                                        GHC.Generics.:*: GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "logStatus")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R Main.LogStatus))>_R))
                          (Sub (Sym (Main.Rep_LogItem[0]))) <x>_N) -}
372a9bc1b876980640cb96e463fd2a7b
  $fGenericLogItem_$cto ::
    GHC.Generics.Rep Main.LogItem x -> Main.LogItem
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Main.LogItem x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Main.Rep_LogItem[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "LogItem" "Main" "main" 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "logDate")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1
                                              GHC.Generics.R (Main.Year, Main.Month, Main.Day))
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "logStatus")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R Main.LogStatus))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "logDate")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R (Main.Year, Main.Month, Main.Day))
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "logStatus")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            Main.LogStatus)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Main.LogItem
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "logDate")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1
                                GHC.Generics.R (Main.Year, Main.Month, Main.Day)>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <(Main.Year, Main.Month, Main.Day)>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "logStatus")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R Main.LogStatus>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Main.LogStatus>_R <x>_P)) }) -}
38637d1ae37036cdd2876c628606e97a
  $fGenericLogStatus :: GHC.Generics.Generic Main.LogStatus
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.LogStatus
                  Main.$fGenericLogStatus_$cfrom
                  Main.$fFromJSONLogStatus_$cto -}
38637d1ae37036cdd2876c628606e97a
  $fGenericLogStatus1 ::
    Main.LogStatus
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Main.LogStatus) ->
                 case x1 of wild {
                   Main.Completed -> Main.$fGenericLogStatus6 @ x
                   Main.NotCompleted -> Main.$fGenericLogStatus4 @ x
                   Main.Skipped -> Main.$fGenericLogStatus2 @ x }) -}
f6e0418bf7f5043008fde87fc1533e48
  $fGenericLogStatus2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Main.$fGenericLogStatus3 @ x)) -}
dfa1826d5eb391a402c4ec0efa2ae382
  $fGenericLogStatus3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
7ca0f641f576ef93d1ff16e358f50b2e
  $fGenericLogStatus4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Main.$fGenericLogStatus5 @ x)) -}
f17c98072ab58f5e52b145bd5ff86fc3
  $fGenericLogStatus5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
b979a5819548cb609fc93fbd8fb86630
  $fGenericLogStatus6 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
38637d1ae37036cdd2876c628606e97a
  $fGenericLogStatus_$cfrom ::
    Main.LogStatus -> GHC.Generics.Rep Main.LogStatus x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Main.$fGenericLogStatus1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Main.LogStatus>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "LogStatus" "Main" "main" 'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: (GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "NotCompleted"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False)
                                                         GHC.Generics.U1
                                                       GHC.Generics.:+: GHC.Generics.M1
                                                                          GHC.Generics.C
                                                                          ('GHC.Generics.MetaCons
                                                                             "Skipped"
                                                                             'GHC.Generics.PrefixI
                                                                             'GHC.Types.False)
                                                                          GHC.Generics.U1)>_R))
                          (Sub (Sym (Main.Rep_LogStatus[0]))) <x>_N) -}
df72f2232f151d94fc10026fd2e64ba1
  $fShowHabit :: GHC.Show.Show Main.Habit
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Habit
                  Main.$fShowHabit_$cshowsPrec
                  Main.$fShowHabit_$cshow
                  Main.$fShowHabit_$cshowList -}
df72f2232f151d94fc10026fd2e64ba1
  $fShowHabit1 :: Main.Habit -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Main.Habit) ->
                 case w of ww { Main.Habit ww1 ww2 ww3 ww4 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 }) -}
c9ba417d52d6d319b7a3f8f4fe79a086
  $fShowHabit10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "logStatus = "#) -}
9531c148f40b129b92aea39e86159e37
  $fShowHabit11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "logDate = "#) -}
01832493964589d48954ceba850aca7c
  $fShowHabit12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LogItem {"#) -}
e74f13eae408900912f2d74f97101998
  $fShowHabit13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
5f96de9f12b64f7b3dbd81769909ccfa
  $fShowHabit2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
ed6ce79e4e5f3e346b79c490b614cb2e
  $fShowHabit3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "habitChain = "#) -}
62ca76097605e497f4ffdc0381d4f64e
  $fShowHabit4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "habitMotivation = "#) -}
bb7d3d52ea2d1be31e5637f4010f6589
  $fShowHabit5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "habitName = "#) -}
1d5b39efdffe500136c0d12c92808bd4
  $fShowHabit6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
438aa4c3e74bb21cc9f80ebbe03b9ba1
  $fShowHabit7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "habitId = "#) -}
0a97f342421978c6e6a320065c2b684f
  $fShowHabit8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Habit {"#) -}
372a9bc1b876980640cb96e463fd2a7b
  $fShowHabit9 :: Main.LogItem -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Main.LogItem) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.LogItem ww1 ww2 ->
                 Main.$w$cshowsPrec1 0# ww1 ww2 w1 }) -}
df72f2232f151d94fc10026fd2e64ba1
  $fShowHabit_$cshow :: Main.Habit -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Habit) ->
                 Main.$fShowHabit_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
df72f2232f151d94fc10026fd2e64ba1
  $fShowHabit_$cshowList :: [Main.Habit] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.Habit Main.$fShowHabit1) -}
372a9bc1b876980640cb96e463fd2a7b
  $fShowHabit_$cshowList1 :: [Main.LogItem] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Main.LogItem
                   Main.$fShowHabit9) -}
df72f2232f151d94fc10026fd2e64ba1
  $fShowHabit_$cshowsPrec ::
    GHC.Types.Int -> Main.Habit -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Habit) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Habit ww3 ww4 ww5 ww6 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 } }) -}
85ab67383c6b8b2c88c3e97b8047d1ab
  $fShowHabit_$s$fShow[] :: GHC.Show.Show [Main.LogItem]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Main.LogItem]
                  Main.$fShowHabit_$s$fShow[]_$cshowsPrec
                  Main.$fShowHabit_$s$fShow[]_$cshow
                  Main.$fShowHabit_$s$fShow[]_$cshowList -}
2a8e34023169a3c0f44656a2e4a8f1dd
  $fShowHabit_$s$fShow[]_$cshow :: [Main.LogItem] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Main.LogItem]) ->
                 Main.$fShowHabit_$cshowList1 x (GHC.Types.[] @ GHC.Types.Char)) -}
448ae2c69417d2ee5d91046c2dd12af0
  $fShowHabit_$s$fShow[]_$cshowList ::
    [[Main.LogItem]] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [[Main.LogItem]]) (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ [Main.LogItem]
                   Main.$fShowHabit_$cshowList1
                   eta
                   eta1) -}
ca9685f85b1ba94226f61fc0feb7dc21
  $fShowHabit_$s$fShow[]_$cshowsPrec ::
    GHC.Types.Int -> [Main.LogItem] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Types.Int)
                   (eta :: [Main.LogItem])
                   (eta1 :: GHC.Base.String) ->
                 Main.$fShowHabit_$cshowList1 eta eta1) -}
372a9bc1b876980640cb96e463fd2a7b
  $fShowLogItem :: GHC.Show.Show Main.LogItem
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.LogItem
                  Main.$fShowLogItem_$cshowsPrec
                  Main.$fShowLogItem_$cshow
                  Main.$fShowHabit_$cshowList1 -}
372a9bc1b876980640cb96e463fd2a7b
  $fShowLogItem_$cshow :: Main.LogItem -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.LogItem) ->
                 Main.$fShowLogItem_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
372a9bc1b876980640cb96e463fd2a7b
  $fShowLogItem_$cshowsPrec ::
    GHC.Types.Int -> Main.LogItem -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.LogItem)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.LogItem ww3 ww4 ->
                 Main.$w$cshowsPrec1 ww1 ww3 ww4 w2 } }) -}
38637d1ae37036cdd2876c628606e97a
  $fShowLogStatus :: GHC.Show.Show Main.LogStatus
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.LogStatus
                  Main.$fShowLogStatus_$cshowsPrec
                  Main.$fShowLogStatus_$cshow
                  Main.$fShowLogStatus_$cshowList -}
38637d1ae37036cdd2876c628606e97a
  $fShowLogStatus_$cshow :: Main.LogStatus -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.LogStatus) ->
                 case x of wild {
                   Main.Completed -> Main.$fFromJSONLogStatus7
                   Main.NotCompleted -> Main.$fFromJSONLogStatus6
                   Main.Skipped -> Main.$fFromJSONLogStatus5 }) -}
38637d1ae37036cdd2876c628606e97a
  $fShowLogStatus_$cshowList :: [Main.LogStatus] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Main.LogStatus
                   Main.$w$cshowsPrec2) -}
38637d1ae37036cdd2876c628606e97a
  $fShowLogStatus_$cshowsPrec ::
    GHC.Types.Int -> Main.LogStatus -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.LogStatus)
                   (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec2 w1 w2) -}
df72f2232f151d94fc10026fd2e64ba1
  $fToJSONHabit :: Data.Aeson.Types.ToJSON.ToJSON Main.Habit
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Habit
                  Main.$fToJSONHabit_$ctoJSON
                  Main.$fToJSONHabit_$ctoEncoding
                  Main.$fToJSONHabit_$ctoJSONList1
                  Main.$fToJSONHabit_$ctoEncodingList -}
df72f2232f151d94fc10026fd2e64ba1
  $fToJSONHabit1 ::
    Main.Habit
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Habit) ->
                 case w of ww { Main.Habit ww1 ww2 ww3 ww4 ->
                 case Main.$w$ctoJSON ww1 ww2 ww3 ww4 of ww5 { Unit# ww6 ->
                 (Data.Aeson.Types.Internal.Object ww6)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
64f7bf97805ff801f5ab4376617cd4c9
  $fToJSONHabit10 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
         a1
    -> [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (Data.Aeson.Types.ToJSON.$w$ctaggedObjectPairs
                   @ GHC.Generics.U1
                   @ Data.Aeson.Types.Generic.False
                   @ Data.Aeson.Types.Generic.Zero
                   @ ('GHC.Generics.MetaCons
                        "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   (Data.Aeson.Types.ToJSON.$fTaggedObjectPairs'TYPEarityU1False1
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Trans
                        (forall (a :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                 Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <GHC.Generics.U1 a>_R
                         ->_R Sym (Data.Tagged.N:Tagged[0]
                                       <*>_N
                                       <Data.Aeson.Types.Generic.False>_P
                                       <[Data.Aeson.Types.Internal.Pair]>_R))
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs'[0]
                                  <*>_N
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.U1>_N
                                  <Data.Aeson.Types.Generic.False>_N)))
                   Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons1) -}
e6d18981e3e8ab1d2ef532d3cb1d2145
  $fToJSONHabit11 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
         a1
    -> [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (Data.Aeson.Types.ToJSON.$w$ctaggedObjectPairs
                   @ GHC.Generics.U1
                   @ Data.Aeson.Types.Generic.False
                   @ Data.Aeson.Types.Generic.Zero
                   @ ('GHC.Generics.MetaCons
                        "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   (Data.Aeson.Types.ToJSON.$fTaggedObjectPairs'TYPEarityU1False1
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Trans
                        (forall (a :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                 Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <GHC.Generics.U1 a>_R
                         ->_R Sym (Data.Tagged.N:Tagged[0]
                                       <*>_N
                                       <Data.Aeson.Types.Generic.False>_P
                                       <[Data.Aeson.Types.Internal.Pair]>_R))
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs'[0]
                                  <*>_N
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.U1>_N
                                  <Data.Aeson.Types.Generic.False>_N)))
                   Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons2) -}
a9e49df04329025bb0c18b2c72f93acd
  $fToJSONHabit12 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      a1
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a1
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x -> Main.$fFromJSONLogStatus7
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> Main.$fFromJSONLogStatus6
                        GHC.Generics.R1 x1 -> Main.$fFromJSONLogStatus5 } }) -}
fd858c5ab3f1ceb6bef70bd49e49e1a5
  $fToJSONHabit13 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1
         GHC.Generics.R (Main.Year, Main.Month, Main.Day) a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U(1*U,1*U,1*U)>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1
                            GHC.Generics.R (Main.Year, Main.Month, Main.Day) a1) ->
                 case w2
                        `cast`
                      (GHC.Generics.N:K1[0]
                           <GHC.Generics.R>_P
                           <(Main.Year, Main.Month, Main.Day)>_R
                           <a1>_P) of ww { (,,) ww1 ww2 ww3 ->
                 case Main.$w$dGToJSON @ a1 ww1 ww2 ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Array ww5 } }) -}
4ea8ead32b57bdc61378e1720aa1414b
  $fToJSONHabit14 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case Main.$w$dGToJSON1 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
d73bff99d9592164b8664b6d1fa7b1da
  $fToJSONHabit15 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
2ee25d9147b1bdc65a2488b56be64aa1
  $fToJSONHabit16 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,1*U>m4,
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (_opts :: Data.Aeson.Types.Internal.Options)
                   (ds :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (eta :: GHC.Generics.K1
                             GHC.Generics.R GHC.Integer.Type.Integer a1) ->
                 case eta
                        `cast`
                      (GHC.Generics.N:K1[0]
                           <GHC.Generics.R>_P
                           <GHC.Integer.Type.Integer>_R
                           <a1>_P) of dt { DEFAULT ->
                 Data.Aeson.Types.Internal.Number
                   (Data.Scientific.Scientific dt 0#) }) -}
372a9bc1b876980640cb96e463fd2a7b
  $fToJSONHabit2 ::
    Main.LogItem
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.LogItem) ->
                 case w of ww { Main.LogItem ww1 ww2 ->
                 case Main.$w$ctoJSON1 ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
9485bdf189b1c96c20b8875e64c32d45
  $fToJSONHabit3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R Main.LogStatus a1
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (_opts :: Data.Aeson.Types.Internal.Options)
                   (ds :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (eta :: GHC.Generics.K1 GHC.Generics.R Main.LogStatus a1) ->
                 Main.$fToJSONHabit_g
                   (Main.$fGenericLogStatus1
                      @ GHC.Prim.Any
                      eta
                        `cast`
                      (GHC.Generics.N:K1[0]
                           <GHC.Generics.R>_P <Main.LogStatus>_R <a1>_P))) -}
13d23d2f92f2f0542c67252bbd03cef9
  $fToJSONHabit4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(A,1*C1(U),A,A,A,A)><L,A><S,1*U>m3,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case Main.$w$dUntaggedValueObj @ a1 ww2 w2 of ww7 { Unit# ww8 ->
                 Data.Aeson.Types.Internal.String ww8 } }) -}
eb3ad3073e6ec9eb1f6ee34916fa8e37
  $fToJSONHabit5 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> Data.Vector.Vector Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,U><S,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (targs :: Data.Aeson.Types.ToJSON.ToArgs
                               Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> Data.Aeson.Types.ToJSON.$w$ctwoElemArrayObj
                        @ Data.Aeson.Types.Generic.Zero
                        @ GHC.Generics.U1
                        @ ('GHC.Generics.MetaCons
                             "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Main.$fToJSONHabit6
                          `cast`
                        (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                        Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons2
                        @ a1
                        opts
                        targs
                        x
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Aeson.Types.ToJSON.$w$ctwoElemArrayObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Main.$fToJSONHabit6
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons1
                             @ a1
                             opts
                             targs
                             x1
                        GHC.Generics.R1 x1
                        -> Data.Aeson.Types.ToJSON.$w$ctwoElemArrayObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Main.$fToJSONHabit6
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons
                             @ a1
                             opts
                             targs
                             x1 } }) -}
478edb241d17404c2a330f8c810186e1
  $fToJSONHabit6 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a
    -> GHC.Generics.U1 a
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (targs :: Data.Aeson.Types.ToJSON.ToArgs
                               Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a)
                   (eta :: GHC.Generics.U1 a) ->
                 Data.Aeson.Types.Internal.emptyArray) -}
ffd8b2f7665eda1dd57f4317d1443293
  $fToJSONHabit7 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> Data.Aeson.Types.Internal.Object
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,U><S,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (targs :: Data.Aeson.Types.ToJSON.ToArgs
                               Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> Data.Aeson.Types.ToJSON.$w$cobjectWithSingleFieldObj
                        @ Data.Aeson.Types.Generic.Zero
                        @ GHC.Generics.U1
                        @ ('GHC.Generics.MetaCons
                             "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Main.$fToJSONHabit6
                          `cast`
                        (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                        Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons2
                        @ a1
                        opts
                        targs
                        x
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cobjectWithSingleFieldObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Main.$fToJSONHabit6
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons1
                             @ a1
                             opts
                             targs
                             x1
                        GHC.Generics.R1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cobjectWithSingleFieldObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Main.$fToJSONHabit6
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons
                             @ a1
                             opts
                             targs
                             x1 } }) -}
692d27ecc0a6d65d410599a11cbbe14d
  $fToJSONHabit8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> GHC.Base.String
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> [Data.Aeson.Types.Internal.Pair]
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (targs :: Data.Aeson.Types.ToJSON.ToArgs
                               Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (tagFieldName :: GHC.Base.String)
                   (contentsFieldName :: GHC.Base.String)
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> Main.$fToJSONHabit11
                        @ a1
                        opts
                        targs
                        tagFieldName
                        contentsFieldName
                        x
                   GHC.Generics.R1 x
                   -> Data.Aeson.Types.ToJSON.$fTaggedObjectPairsarity:+:_$ctaggedObjectPairs
                        @ Data.Aeson.Types.Generic.Zero
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
                        Main.$fToJSONHabit10
                          `cast`
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs[0]
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1>_N))
                        Main.$fToJSONHabit9
                          `cast`
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs[0]
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1>_N))
                        @ a1
                        opts
                        targs
                        tagFieldName
                        contentsFieldName
                        x }) -}
84dd70c4b71b787fbb997b95120faa18
  $fToJSONHabit9 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
         a1
    -> [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (Data.Aeson.Types.ToJSON.$w$ctaggedObjectPairs
                   @ GHC.Generics.U1
                   @ Data.Aeson.Types.Generic.False
                   @ Data.Aeson.Types.Generic.Zero
                   @ ('GHC.Generics.MetaCons
                        "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   (Data.Aeson.Types.ToJSON.$fTaggedObjectPairs'TYPEarityU1False1
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Trans
                        (forall (a :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                 Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <GHC.Generics.U1 a>_R
                         ->_R Sym (Data.Tagged.N:Tagged[0]
                                       <*>_N
                                       <Data.Aeson.Types.Generic.False>_P
                                       <[Data.Aeson.Types.Internal.Pair]>_R))
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs'[0]
                                  <*>_N
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.U1>_N
                                  <Data.Aeson.Types.Generic.False>_N)))
                   Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons) -}
df72f2232f151d94fc10026fd2e64ba1
  $fToJSONHabit_$ctoEncoding ::
    Main.Habit -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Main.Habit) ->
                 Data.Aeson.Encoding.Internal.value
                   (Main.$fToJSONHabit_$ctoJSON eta)) -}
df72f2232f151d94fc10026fd2e64ba1
  $fToJSONHabit_$ctoEncodingList ::
    [Main.Habit] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Main.Habit]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Main.$fToJSONHabit_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Main.Habit
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Main.Habit)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Main.$fToJSONHabit_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Main.Habit>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
372a9bc1b876980640cb96e463fd2a7b
  $fToJSONHabit_$ctoEncodingList1 ::
    [Main.LogItem] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Main.LogItem]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Main.$fToJSONHabit_$ctoJSON1 x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Main.LogItem
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Main.LogItem)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Main.$fToJSONHabit_$ctoJSON1 v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Main.LogItem>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
df72f2232f151d94fc10026fd2e64ba1
  $fToJSONHabit_$ctoJSON ::
    Main.Habit -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                Main.$fToJSONHabit1
                  `cast`
                (<Main.Habit>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
372a9bc1b876980640cb96e463fd2a7b
  $fToJSONHabit_$ctoJSON1 ::
    Main.LogItem -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                Main.$fToJSONHabit2
                  `cast`
                (<Main.LogItem>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
372a9bc1b876980640cb96e463fd2a7b
  $fToJSONHabit_$ctoJSONList ::
    [Main.LogItem] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Main.LogItem]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Main.LogItem
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Main.LogItem
                                       c
                                       Main.$fToJSONHabit_$ctoJSON1)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
df72f2232f151d94fc10026fd2e64ba1
  $fToJSONHabit_$ctoJSONList1 ::
    [Main.Habit] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Main.Habit]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Main.Habit
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Main.Habit
                                       c
                                       Main.$fToJSONHabit_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
d54d4fe71eb84251aa5fb0560d7946f3
  $fToJSONHabit_$s$fToJSON[] ::
    Data.Aeson.Types.ToJSON.ToJSON [Main.LogItem]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Main.LogItem]
                  Main.$fToJSONHabit_$ctoJSONList
                  Main.$fToJSONHabit_$ctoEncodingList1
                  (\ (eta :: [[Main.LogItem]]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ [Main.LogItem]
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ [Main.LogItem]
                                         c
                                         Main.$fToJSONHabit_$ctoJSONList)
                                      n
                                      eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt1 })
                  (\ (eta :: [[Main.LogItem]]) ->
                   case eta of wild {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (case x of wild1 {
                                 []
                                 -> Data.Aeson.Encoding.Internal.emptyArray_
                                      `cast`
                                    (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                         <Data.Aeson.Types.Internal.Value>_P)
                                 : x1 xs1
                                 -> Data.ByteString.Builder.Internal.append
                                      (Data.Aeson.Encoding.Internal.openBracket
                                         @ Data.Aeson.Types.Internal.Value)
                                        `cast`
                                      (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                           <Data.Aeson.Types.Internal.Value>_P)
                                      (Data.ByteString.Builder.Internal.append
                                         (Data.Aeson.Encoding.Internal.value
                                            (Main.$fToJSONHabit_$ctoJSON1 x1))
                                           `cast`
                                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                              <Data.Aeson.Types.Internal.Value>_P)
                                         (Data.ByteString.Builder.Internal.append
                                            (GHC.Base.foldr
                                               @ Main.LogItem
                                               @ (Data.Aeson.Encoding.Internal.Encoding'
                                                    Data.Aeson.Types.Internal.Value)
                                               (\ (v :: Main.LogItem)
                                                  (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                           Data.Aeson.Types.Internal.Value)[OneShot] ->
                                                Data.ByteString.Builder.Internal.append
                                                  (Data.Aeson.Encoding.Internal.comma
                                                     @ Data.Aeson.Types.Internal.Value)
                                                    `cast`
                                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P)
                                                  (Data.ByteString.Builder.Internal.append
                                                     (Data.Aeson.Encoding.Internal.value
                                                        (Main.$fToJSONHabit_$ctoJSON1 v))
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)
                                                     vs
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)))
                                                 `cast`
                                               (<Main.LogItem>_R
                                                ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                        Data.Aeson.Types.Internal.Value>_R
                                                ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                              <Data.Aeson.Types.Internal.Value>_P))
                                               (Data.Aeson.Encoding.Internal.empty
                                                  @ Data.Aeson.Types.Internal.Value)
                                               xs1)
                                              `cast`
                                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P)
                                            (Data.Aeson.Encoding.Internal.closeBracket
                                               @ Data.Aeson.Types.Internal.Value)
                                              `cast`
                                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))) })
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ [Main.LogItem]
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: [Main.LogItem])
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (case v of wild1 {
                                             []
                                             -> Data.Aeson.Encoding.Internal.emptyArray_
                                                  `cast`
                                                (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                     <Data.Aeson.Types.Internal.Value>_P)
                                             : x1 xs1
                                             -> Data.ByteString.Builder.Internal.append
                                                  (Data.Aeson.Encoding.Internal.openBracket
                                                     @ Data.Aeson.Types.Internal.Value)
                                                    `cast`
                                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P)
                                                  (Data.ByteString.Builder.Internal.append
                                                     (Data.Aeson.Encoding.Internal.value
                                                        (Main.$fToJSONHabit_$ctoJSON1 x1))
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)
                                                     (Data.ByteString.Builder.Internal.append
                                                        (GHC.Base.foldr
                                                           @ Main.LogItem
                                                           @ (Data.Aeson.Encoding.Internal.Encoding'
                                                                Data.Aeson.Types.Internal.Value)
                                                           (\ (v1 :: Main.LogItem)
                                                              (vs1 :: Data.Aeson.Encoding.Internal.Encoding'
                                                                        Data.Aeson.Types.Internal.Value)[OneShot] ->
                                                            Data.ByteString.Builder.Internal.append
                                                              (Data.Aeson.Encoding.Internal.comma
                                                                 @ Data.Aeson.Types.Internal.Value)
                                                                `cast`
                                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                   <Data.Aeson.Types.Internal.Value>_P)
                                                              (Data.ByteString.Builder.Internal.append
                                                                 (Data.Aeson.Encoding.Internal.value
                                                                    (Main.$fToJSONHabit_$ctoJSON1
                                                                       v1))
                                                                   `cast`
                                                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                      <Data.Aeson.Types.Internal.Value>_P)
                                                                 vs1
                                                                   `cast`
                                                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                      <Data.Aeson.Types.Internal.Value>_P)))
                                                             `cast`
                                                           (<Main.LogItem>_R
                                                            ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                                    Data.Aeson.Types.Internal.Value>_R
                                                            ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                          <Data.Aeson.Types.Internal.Value>_P))
                                                           (Data.Aeson.Encoding.Internal.empty
                                                              @ Data.Aeson.Types.Internal.Value)
                                                           xs1)
                                                          `cast`
                                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                             <Data.Aeson.Types.Internal.Value>_P)
                                                        (Data.Aeson.Encoding.Internal.closeBracket
                                                           @ Data.Aeson.Types.Internal.Value)
                                                          `cast`
                                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                             <Data.Aeson.Types.Internal.Value>_P))) })
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<[Main.LogItem]>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) }) -}
dc4bea5bb1c9bcd216a195cef107f8b7
  $fToJSONHabit_$s$fToJSON[]1 ::
    Data.Aeson.Types.ToJSON.ToJSON [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  Data.Aeson.Types.ToJSON.$fToJSONChar_$ctoJSONList
                  (Data.Aeson.Encoding.Internal.string
                     @ Data.Aeson.Types.Internal.Value)
                  (\ (eta :: [[GHC.Types.Char]]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ [GHC.Types.Char]
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ [GHC.Types.Char]
                                         c
                                         Data.Aeson.Types.ToJSON.$fToJSONChar_$ctoJSONList)
                                      n
                                      eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt1 })
                  (\ (eta :: [[GHC.Types.Char]]) ->
                   case eta of wild {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (Data.Aeson.Encoding.Internal.string
                                 @ Data.Aeson.Types.Internal.Value
                                 x)
                                `cast`
                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                   <Data.Aeson.Types.Internal.Value>_P)
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ [GHC.Types.Char]
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: [GHC.Types.Char])
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (Data.Aeson.Encoding.Internal.string
                                             @ Data.Aeson.Types.Internal.Value
                                             v)
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<[GHC.Types.Char]>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) }) -}
3769e05bac108ddb86400efd1a031b13
  $fToJSONHabit_g ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      GHC.Prim.Any
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Unfolding: (Data.Aeson.Types.ToJSON.$w$csumToJSON
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Skipped"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ Data.Aeson.Types.Generic.Zero
                   Main.$fToJSONHabit12
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:GetConName[0]
                             <GHC.Types.*>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "NotCompleted"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Skipped"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Main.$fToJSONHabit8
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "NotCompleted"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Skipped"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Main.$fToJSONHabit7
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:ObjectWithSingleFieldObj[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "NotCompleted"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Skipped"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Main.$fToJSONHabit5
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:TwoElemArrayObj[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "NotCompleted"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Skipped"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Main.$fToJSONHabit4
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:UntaggedValueObj[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "NotCompleted"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Skipped"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   @ GHC.Prim.Any
                   (GHC.Base.id @ GHC.Base.String)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject
                   GHC.Types.False
                   (Data.Aeson.Types.ToJSON.$WNoToArgs
                      @ Data.Aeson.Types.Internal.Value
                      @ GHC.Prim.Any)) -}
14b56e06bfe8420ab11fd9610355ca75
  $fToJSONHabit_w2 :: Data.Aeson.Types.Internal.Options
  {- Strictness: m,
     Unfolding: (Data.Aeson.Types.Internal.Options
                   (GHC.Base.id @ GHC.Base.String)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject
                   GHC.Types.False) -}
372a9bc1b876980640cb96e463fd2a7b
  $fToJSONLogItem :: Data.Aeson.Types.ToJSON.ToJSON Main.LogItem
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.LogItem
                  Main.$fToJSONHabit_$ctoJSON1
                  Main.$fToJSONLogItem_$ctoEncoding
                  Main.$fToJSONHabit_$ctoJSONList
                  Main.$fToJSONHabit_$ctoEncodingList1 -}
372a9bc1b876980640cb96e463fd2a7b
  $fToJSONLogItem_$ctoEncoding ::
    Main.LogItem -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Main.LogItem) ->
                 Data.Aeson.Encoding.Internal.value
                   (Main.$fToJSONHabit_$ctoJSON1 eta)) -}
38637d1ae37036cdd2876c628606e97a
  $fToJSONLogStatus :: Data.Aeson.Types.ToJSON.ToJSON Main.LogStatus
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.LogStatus
                  Main.$fToJSONLogStatus_$ctoJSON
                  Main.$fToJSONLogStatus_$ctoEncoding
                  Main.$fToJSONLogStatus_$ctoJSONList
                  Main.$fToJSONLogStatus_$ctoEncodingList -}
38637d1ae37036cdd2876c628606e97a
  $fToJSONLogStatus1 ::
    Main.LogStatus
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.LogStatus) ->
                 Main.$fToJSONHabit_g
                   (Main.$fGenericLogStatus1 @ GHC.Prim.Any x)) -}
38637d1ae37036cdd2876c628606e97a
  $fToJSONLogStatus_$ctoEncoding ::
    Main.LogStatus -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <L,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Main.LogStatus) ->
                 Data.Aeson.Encoding.Internal.value
                   (Main.$fToJSONLogStatus_$ctoJSON eta)) -}
38637d1ae37036cdd2876c628606e97a
  $fToJSONLogStatus_$ctoEncodingList ::
    [Main.LogStatus] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Main.LogStatus]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Main.$fToJSONLogStatus_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Main.LogStatus
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Main.LogStatus)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Main.$fToJSONLogStatus_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Main.LogStatus>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
38637d1ae37036cdd2876c628606e97a
  $fToJSONLogStatus_$ctoJSON ::
    Main.LogStatus -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Main.$fToJSONLogStatus1
                  `cast`
                (<Main.LogStatus>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
38637d1ae37036cdd2876c628606e97a
  $fToJSONLogStatus_$ctoJSONList ::
    [Main.LogStatus] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Main.LogStatus]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Main.LogStatus
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Main.LogStatus
                                       c
                                       Main.$fToJSONLogStatus_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
63621bae1788806b40f732c13f949451
  $s$fAllCTRender:a ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] [Main.Habit]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [Main.Habit]
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [Main.Habit]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Main.$s$fAllCTRender:a1)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [Main.Habit]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Main.$s$fAllCTRender:a1) -}
e67ce6a2ee3d669704d5c7149e702cd6
  $s$fAllCTRender:a1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [Main.Habit]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fAllCTRender:a_$s$fAllMimeRender:a0 -}
a8024ab93fedca4380ba1a11ea9b6b8e
  $s$fAllCTRender:a2 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> [Main.Habit]
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: [Main.Habit]) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   (Servant.API.ContentTypes.$fAcceptTYPEJSON1,
                    Main.$s$fAllCTRender:a_$sencode eta1)
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
b8649145b0d63f7a4d385a81df8ce6fc
  $s$fAllCTRender:a3 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [Main.Habit]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa -}
98805331c605ede3cfba9d87e18d9b4a
  $s$fAllCTRender:a4 :: Data.Aeson.Types.ToJSON.ToJSON [Main.Habit]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fAllCTRender:a_$s$fToJSON[] -}
1ed5624d2fe7c8d0d3b2b5ceaf1a5c01
  $s$fAllCTRender:a_$s$fAllMimeRender:a0 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [Main.Habit]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [Main.Habit]
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ [Main.Habit]
                     Main.$s$fAllCTRender:a3)
                  Main.$s$fAllCTRender:a2 -}
54850bab016aba90fa72e20ec9aa23fd
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [Main.Habit]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [Main.Habit]
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ [Main.Habit]
                     Main.$s$fAllCTRender:a4)
                  Main.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender -}
ffaef630df6737d3b0a6bb22ec0462ae
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> [Main.Habit] -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: [Main.Habit]) ->
                 Main.$s$fAllCTRender:a_$sencode eta) -}
4d6b0f66b9f72a6f56c7ff0bc1ac442e
  $s$fAllCTRender:a_$s$fToJSON[] ::
    Data.Aeson.Types.ToJSON.ToJSON [Main.Habit]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Main.Habit]
                  Main.$fToJSONHabit_$ctoJSONList1
                  Main.$fToJSONHabit_$ctoEncodingList
                  (\ (eta :: [[Main.Habit]]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ [Main.Habit]
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ [Main.Habit]
                                         c
                                         Main.$fToJSONHabit_$ctoJSONList1)
                                      n
                                      eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt1 })
                  (\ (eta :: [[Main.Habit]]) ->
                   case eta of wild {
                     [] -> Data.Aeson.Encoding.Internal.emptyArray_
                     : x xs
                     -> (Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (case x of wild1 {
                                 []
                                 -> Data.Aeson.Encoding.Internal.emptyArray_
                                      `cast`
                                    (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                         <Data.Aeson.Types.Internal.Value>_P)
                                 : x1 xs1
                                 -> Data.ByteString.Builder.Internal.append
                                      (Data.Aeson.Encoding.Internal.openBracket
                                         @ Data.Aeson.Types.Internal.Value)
                                        `cast`
                                      (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                           <Data.Aeson.Types.Internal.Value>_P)
                                      (Data.ByteString.Builder.Internal.append
                                         (Data.Aeson.Encoding.Internal.value
                                            (Main.$fToJSONHabit_$ctoJSON x1))
                                           `cast`
                                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                              <Data.Aeson.Types.Internal.Value>_P)
                                         (Data.ByteString.Builder.Internal.append
                                            (GHC.Base.foldr
                                               @ Main.Habit
                                               @ (Data.Aeson.Encoding.Internal.Encoding'
                                                    Data.Aeson.Types.Internal.Value)
                                               (\ (v :: Main.Habit)
                                                  (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                           Data.Aeson.Types.Internal.Value)[OneShot] ->
                                                Data.ByteString.Builder.Internal.append
                                                  (Data.Aeson.Encoding.Internal.comma
                                                     @ Data.Aeson.Types.Internal.Value)
                                                    `cast`
                                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P)
                                                  (Data.ByteString.Builder.Internal.append
                                                     (Data.Aeson.Encoding.Internal.value
                                                        (Main.$fToJSONHabit_$ctoJSON v))
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)
                                                     vs
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)))
                                                 `cast`
                                               (<Main.Habit>_R
                                                ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                        Data.Aeson.Types.Internal.Value>_R
                                                ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                              <Data.Aeson.Types.Internal.Value>_P))
                                               (Data.Aeson.Encoding.Internal.empty
                                                  @ Data.Aeson.Types.Internal.Value)
                                               xs1)
                                              `cast`
                                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P)
                                            (Data.Aeson.Encoding.Internal.closeBracket
                                               @ Data.Aeson.Types.Internal.Value)
                                              `cast`
                                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))) })
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ [Main.Habit]
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: [Main.Habit])
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (case v of wild1 {
                                             []
                                             -> Data.Aeson.Encoding.Internal.emptyArray_
                                                  `cast`
                                                (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                     <Data.Aeson.Types.Internal.Value>_P)
                                             : x1 xs1
                                             -> Data.ByteString.Builder.Internal.append
                                                  (Data.Aeson.Encoding.Internal.openBracket
                                                     @ Data.Aeson.Types.Internal.Value)
                                                    `cast`
                                                  (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                       <Data.Aeson.Types.Internal.Value>_P)
                                                  (Data.ByteString.Builder.Internal.append
                                                     (Data.Aeson.Encoding.Internal.value
                                                        (Main.$fToJSONHabit_$ctoJSON x1))
                                                       `cast`
                                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                          <Data.Aeson.Types.Internal.Value>_P)
                                                     (Data.ByteString.Builder.Internal.append
                                                        (GHC.Base.foldr
                                                           @ Main.Habit
                                                           @ (Data.Aeson.Encoding.Internal.Encoding'
                                                                Data.Aeson.Types.Internal.Value)
                                                           (\ (v1 :: Main.Habit)
                                                              (vs1 :: Data.Aeson.Encoding.Internal.Encoding'
                                                                        Data.Aeson.Types.Internal.Value)[OneShot] ->
                                                            Data.ByteString.Builder.Internal.append
                                                              (Data.Aeson.Encoding.Internal.comma
                                                                 @ Data.Aeson.Types.Internal.Value)
                                                                `cast`
                                                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                   <Data.Aeson.Types.Internal.Value>_P)
                                                              (Data.ByteString.Builder.Internal.append
                                                                 (Data.Aeson.Encoding.Internal.value
                                                                    (Main.$fToJSONHabit_$ctoJSON
                                                                       v1))
                                                                   `cast`
                                                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                      <Data.Aeson.Types.Internal.Value>_P)
                                                                 vs1
                                                                   `cast`
                                                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                      <Data.Aeson.Types.Internal.Value>_P)))
                                                             `cast`
                                                           (<Main.Habit>_R
                                                            ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                                                    Data.Aeson.Types.Internal.Value>_R
                                                            ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                          <Data.Aeson.Types.Internal.Value>_P))
                                                           (Data.Aeson.Encoding.Internal.empty
                                                              @ Data.Aeson.Types.Internal.Value)
                                                           xs1)
                                                          `cast`
                                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                             <Data.Aeson.Types.Internal.Value>_P)
                                                        (Data.Aeson.Encoding.Internal.closeBracket
                                                           @ Data.Aeson.Types.Internal.Value)
                                                          `cast`
                                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                             <Data.Aeson.Types.Internal.Value>_P))) })
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<[Main.Habit]>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))))
                          `cast`
                        (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                  <Data.Aeson.Types.Internal.Value>_P)) }) -}
61555ea555d7b00d6ed0a0fc605a9476
  $s$fAllCTRender:a_$sencode ::
    [Main.Habit] -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [Main.Habit]) ->
                 Data.ByteString.Builder.toLazyByteString
                   (case eta of wild {
                      []
                      -> Data.Aeson.Encoding.Internal.emptyArray_
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                      : x xs
                      -> Data.ByteString.Builder.Internal.append
                           (Data.Aeson.Encoding.Internal.openBracket
                              @ Data.Aeson.Types.Internal.Value)
                             `cast`
                           (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)
                           (Data.ByteString.Builder.Internal.append
                              (Data.Aeson.Encoding.Internal.value
                                 (Main.$fToJSONHabit_$ctoJSON x))
                                `cast`
                              (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                   <Data.Aeson.Types.Internal.Value>_P)
                              (Data.ByteString.Builder.Internal.append
                                 (GHC.Base.foldr
                                    @ Main.Habit
                                    @ (Data.Aeson.Encoding.Internal.Encoding'
                                         Data.Aeson.Types.Internal.Value)
                                    (\ (v :: Main.Habit)
                                       (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                                Data.Aeson.Types.Internal.Value)[OneShot] ->
                                     Data.ByteString.Builder.Internal.append
                                       (Data.Aeson.Encoding.Internal.comma
                                          @ Data.Aeson.Types.Internal.Value)
                                         `cast`
                                       (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                            <Data.Aeson.Types.Internal.Value>_P)
                                       (Data.ByteString.Builder.Internal.append
                                          (Data.Aeson.Encoding.Internal.value
                                             (Main.$fToJSONHabit_$ctoJSON v))
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)
                                          vs
                                            `cast`
                                          (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                               <Data.Aeson.Types.Internal.Value>_P)))
                                      `cast`
                                    (<Main.Habit>_R
                                     ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                             Data.Aeson.Types.Internal.Value>_R
                                     ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                   <Data.Aeson.Types.Internal.Value>_P))
                                    (Data.Aeson.Encoding.Internal.empty
                                       @ Data.Aeson.Types.Internal.Value)
                                    xs)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P)
                                 (Data.Aeson.Encoding.Internal.closeBracket
                                    @ Data.Aeson.Types.Internal.Value)
                                   `cast`
                                 (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                      <Data.Aeson.Types.Internal.Value>_P))) })) -}
1315f9925c3457e5466c6bbe0aa2f88f
  $s$fAllMimeUnrender:a ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] Main.Habit
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ Main.Habit
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ Main.Habit
                     @ '[]
                     Main.$s$fAllMimeUnrender:a1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a @ Main.Habit))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ Main.Habit
                     @ '[]
                     Main.$s$fAllMimeUnrender:a1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a @ Main.Habit)) -}
aea963b976aa35059fbf29c79f0c929a
  $s$fAllMimeUnrender:a1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON Main.Habit
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa -}
9c0dad932e1bb05294a9b69f38f7f47f
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON Main.Habit
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ Main.Habit
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ Main.Habit
                     Main.$fFromJSONHabit)
                  Main.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender -}
f52f5722eb90b42d6bd10b8f79f5a82f
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Main.Habit
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ Main.Habit
                   Main.$fFromJSONHabit
                   eta) -}
c52cf44b2736ce5d1c57906e3e423598
  $sserve3 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      env
      (Servant.Server.Internal.Server
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [Main.Habit]))
    -> Servant.Server.Internal.Router.Router env
  {- Unfolding: (\ @ env ->
                 Servant.Server.Internal.$w$croute9
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [Main.Habit]
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   Main.$s$fAllCTRender:a
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   Main.$sserve4
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [Main.Habit]))) -}
d3b76f611ef4111db6cb11bc8b47ca5a
  $sserve4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (200) -}
76e58bbf0195f5d518a29d517bd34b7b
  $sserve5 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.POST
         200
         '[Servant.API.ContentTypes.JSON]
         [Main.Habit])
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.POST
               200
               '[Servant.API.ContentTypes.JSON]
               [Main.Habit]))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2, Strictness: <S,1*H><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.POST
                               200
                               '[Servant.API.ContentTypes.JSON]
                               [Main.Habit]))
                   (w4 :: Servant.Server.Internal.Context.Context '[]) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute9
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [Main.Habit]
                   @ 'Network.HTTP.Types.Method.POST
                   @ 200
                   @ '[]
                   Main.$s$fAllCTRender:a
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   Main.$sserve4
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [Main.Habit])) }) -}
709d457dc9f8a70ecfe0fa6adde6400e
  $sserve6 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe (Data.Either.Either GHC.Base.String Main.Habit)
  {- Arity: 3, Strictness: <L,A><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ Main.Habit
                   Main.$s$fAllMimeUnrender:a
                   w2
                   w3) -}
ac6637ffdbd70cadac0bc78104403d02
  $sserve7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Main.$sserve8
                   0#
                   ipv }) -}
fd1924ecbdbd410efb5ea7547a05407c
  $sserve8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "habits"#) -}
aace69c7b48cc0f9600c354e6c45527b
  $tc'Completed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13966790117158989207##
                   8052602020403593959##
                   Main.$trModule
                   Main.$tc'Completed1) -}
6f6b04e7d95c920258351c367a301dc5
  $tc'Completed1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Completed"#) -}
c61257d8c8fcf198cbed8a85faccbf9c
  $tc'Habit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5637227888735360164##
                   1502562854200976563##
                   Main.$trModule
                   Main.$tc'Habit1) -}
e6bb4abcbedebf3b40b3a4e5b8074ffa
  $tc'Habit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Habit"#) -}
bcf3e4001cdaeeef018c626e9eb1d7a9
  $tc'LogItem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12505132616903440394##
                   10344410006883008290##
                   Main.$trModule
                   Main.$tc'LogItem1) -}
a38e18df130dd7b20a0524c3391239a9
  $tc'LogItem1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LogItem"#) -}
228f83dca04fb6c8c231a2cb2857bb0e
  $tc'NotCompleted :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14239948137991049533##
                   15338006181087434377##
                   Main.$trModule
                   Main.$tc'NotCompleted1) -}
ef431eb3ef21f9cbdfcdce0e29c3b471
  $tc'NotCompleted1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NotCompleted"#) -}
ac4031f32abe1826c271774ba0f0b6b6
  $tc'Skipped :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1505379038260258521##
                   976806786457429136##
                   Main.$trModule
                   Main.$tc'Skipped1) -}
5b12d06504fe66211f4e4aa5fd46d0ad
  $tc'Skipped1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Skipped"#) -}
7ec1e76fa6bf97ce249dc5cb26a703e7
  $tcHabit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   68234066289995085##
                   15093273053948602687##
                   Main.$trModule
                   Main.$tcHabit1) -}
301805ca26488c07824da8fb61d9cb3e
  $tcHabit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Habit"#) -}
c7d3aefe3d4a48155ce232602762f1f8
  $tcLogItem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7622577336543702084##
                   17197779570638662033##
                   Main.$trModule
                   Main.$tcLogItem1) -}
eae1bab7930a859a540c184854ea519d
  $tcLogItem1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LogItem"#) -}
40fc6ab08a32b349d18039fc1523c84e
  $tcLogStatus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17716287514807657294##
                   5764899127904521181##
                   Main.$trModule
                   Main.$tcLogStatus1) -}
46b98ae63bf99bc3996033ffb4e19e54
  $tcLogStatus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LogStatus"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
216f062dd1fa1576c47c53f1ba13204d
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Base.String
    -> GHC.Base.Maybe GHC.Base.String
    -> GHC.Base.Maybe [Main.LogItem]
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,U><L,U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.Maybe GHC.Base.String)
                   (ww4 :: GHC.Base.Maybe [Main.LogItem]) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ [GHC.Types.Char]
                       GHC.Show.$fShow[]_$s$fShow[]1
                       Main.$fShowHabit13
                       ww3
                 } in
                 let {
                   f5 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ [Main.LogItem]
                       Main.$fShowHabit_$s$fShow[]
                       Main.$fShowHabit13
                       ww4
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Main.$fShowHabit8
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Main.$fShowHabit7
                          (case GHC.Show.$w$cshowsPrec1
                                  0#
                                  ww1
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     Main.$fShowHabit6
                                     (GHC.Base.++
                                        @ GHC.Types.Char
                                        Main.$fShowHabit5
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.shows6
                                           (GHC.Show.showLitString
                                              ww2
                                              (GHC.Types.:
                                                 @ GHC.Types.Char
                                                 GHC.Show.shows6
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    Main.$fShowHabit6
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       Main.$fShowHabit4
                                                       (f (GHC.Base.++
                                                             @ GHC.Types.Char
                                                             Main.$fShowHabit6
                                                             (GHC.Base.++
                                                                @ GHC.Types.Char
                                                                Main.$fShowHabit3
                                                                (f5
                                                                   (GHC.Base.++
                                                                      @ GHC.Types.Char
                                                                      Main.$fShowHabit2
                                                                      x)))))))))))) of ww5 { (#,#) ww6 ww7 ->
                           GHC.Types.: @ GHC.Types.Char ww6 ww7 }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }) -}
20af3b0095275775925137843b3f5892
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> (Main.Year, Main.Month, Main.Day)
    -> Main.LogStatus
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U,U,U)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: (Main.Year, Main.Month, Main.Day))
                   (ww2 :: Main.LogStatus)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Main.$fShowHabit12
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Main.$fShowHabit11
                          (case ww1 of ww3 { (,,) ww4 ww5 ww6 ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (case GHC.Show.$w$cshowsPrec1
                                     0#
                                     ww4
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.shows5
                                        (GHC.Show.$fShow(,,)_$sgo
                                           (GHC.Types.:
                                              @ GHC.Types.Char
                                              GHC.Show.shows4
                                              (GHC.Base.++
                                                 @ GHC.Types.Char
                                                 Main.$fShowHabit6
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    Main.$fShowHabit10
                                                    (case ww2 of wild {
                                                       Main.Completed
                                                       -> GHC.Base.++
                                                            @ GHC.Types.Char
                                                            Main.$fFromJSONLogStatus7
                                                            (GHC.Base.++
                                                               @ GHC.Types.Char
                                                               Main.$fShowHabit2
                                                               x)
                                                       Main.NotCompleted
                                                       -> GHC.Base.++
                                                            @ GHC.Types.Char
                                                            Main.$fFromJSONLogStatus6
                                                            (GHC.Base.++
                                                               @ GHC.Types.Char
                                                               Main.$fShowHabit2
                                                               x)
                                                       Main.Skipped
                                                       -> GHC.Base.++
                                                            @ GHC.Types.Char
                                                            Main.$fFromJSONLogStatus5
                                                            (GHC.Base.++
                                                               @ GHC.Types.Char
                                                               Main.$fShowHabit2
                                                               x) }))))
                                           (\ (w2 :: GHC.Base.String) ->
                                            case GHC.Show.$w$cshowsPrec1
                                                   0#
                                                   ww5
                                                   w2 of ww7 { (#,#) ww8 ww9 ->
                                            GHC.Types.: @ GHC.Types.Char ww8 ww9 })
                                           (GHC.Types.:
                                              @ GHC.Show.ShowS
                                              (\ (w2 :: GHC.Base.String) ->
                                               case GHC.Show.$w$cshowsPrec1
                                                      0#
                                                      ww6
                                                      w2 of ww7 { (#,#) ww8 ww9 ->
                                               GHC.Types.: @ GHC.Types.Char ww8 ww9 })
                                              (GHC.Types.[]
                                                 @ GHC.Show.ShowS)))) of ww7 { (#,#) ww8 ww9 ->
                              GHC.Types.: @ GHC.Types.Char ww8 ww9 }) }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
38637d1ae37036cdd2876c628606e97a
  $w$cshowsPrec2 ::
    Main.LogStatus -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Main.LogStatus) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.Completed
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fFromJSONLogStatus7 w1
                   Main.NotCompleted
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fFromJSONLogStatus6 w1
                   Main.Skipped
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fFromJSONLogStatus5 w1 }) -}
02bf5c31932a5a73188401506739e178
  $w$ctoJSON ::
    GHC.Integer.Type.Integer
    -> GHC.Base.String
    -> GHC.Base.Maybe GHC.Base.String
    -> GHC.Base.Maybe [Main.LogItem]
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.Maybe GHC.Base.String)
                   (ww3 :: GHC.Base.Maybe [Main.LogItem]) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "habitId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                           Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel3
                           Main.$fToJSONHabit16
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_N))
                           @ GHC.Prim.Any
                           Main.$fToJSONHabit_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P
                                          <GHC.Integer.Type.Integer>_R
                                          <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "habitId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R
                                             GHC.Integer.Type.Integer>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "habitName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                              Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel2
                              Main.$fToJSONHabit14
                                `cast`
                              (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                        <Data.Aeson.Types.Generic.Zero>_N
                                        <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                              @ GHC.Prim.Any
                              Main.$fToJSONHabit_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "habitName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                GHC.Base.String>_R) <GHC.Prim.Any>_N))
                              ((Data.Aeson.Types.ToJSON.$w$crecordToPairs1
                                  @ ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "habitMotivation")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                  @ [GHC.Types.Char]
                                  @ Data.Aeson.Types.Generic.Zero
                                  @ GHC.Generics.R
                                  Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel1
                                  Main.$fToJSONHabit_$s$fToJSON[]1
                                  @ GHC.Prim.Any
                                  (GHC.Base.id @ GHC.Base.String)
                                  GHC.Types.False
                                  ww2
                                    `cast`
                                  (Trans
                                       (Sym (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P
                                                 <GHC.Base.Maybe GHC.Base.String>_R
                                                 <GHC.Prim.Any>_P))
                                       (Sym (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "habitMotivation")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (GHC.Base.Maybe
                                                       GHC.Base.String)>_R) <GHC.Prim.Any>_N)))
                                 `cast`
                               (Data.DList.N:DList[0]
                                    <(Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)>_R)
                                 ((Data.Aeson.Types.ToJSON.$w$crecordToPairs1
                                     @ ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "habitChain")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                     @ [Main.LogItem]
                                     @ Data.Aeson.Types.Generic.Zero
                                     @ GHC.Generics.R
                                     Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel
                                     Main.$fToJSONHabit_$s$fToJSON[]
                                     @ GHC.Prim.Any
                                     (GHC.Base.id @ GHC.Base.String)
                                     GHC.Types.False
                                     ww3
                                       `cast`
                                     (Trans
                                          (Sym (GHC.Generics.N:K1[0]
                                                    <GHC.Generics.R>_P
                                                    <GHC.Base.Maybe [Main.LogItem]>_R
                                                    <GHC.Prim.Any>_P))
                                          (Sym (GHC.Generics.N:M1[0]
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "habitChain")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       (GHC.Base.Maybe
                                                          [Main.LogItem])>_R) <GHC.Prim.Any>_N)))
                                    `cast`
                                  (Data.DList.N:DList[0]
                                       <(Data.Text.Internal.Text,
                                         Data.Aeson.Types.Internal.Value)>_R)
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
fc8b3321dcd8a3152423364b02e1501f
  $w$ctoJSON1 ::
    (Main.Year, Main.Month, Main.Day)
    -> Main.LogStatus -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: (Main.Year, Main.Month, Main.Day))
                   (ww1 :: Main.LogStatus) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "logDate")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1
                                GHC.Generics.R (Main.Year, Main.Month, Main.Day))
                           Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel1
                           Main.$fToJSONHabit13
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1
                                        GHC.Generics.R (Main.Year, Main.Month, Main.Day)>_N))
                           @ GHC.Prim.Any
                           Main.$fToJSONHabit_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P
                                          <(Main.Year, Main.Month, Main.Day)>_R
                                          <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "logDate")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R
                                             (Main.Year, Main.Month,
                                              Main.Day)>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "logStatus")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R Main.LogStatus)
                              Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel
                              Main.$fToJSONHabit3
                                `cast`
                              (Trans
                                   (forall (a1 :: <*>_N).
                                    <Data.Aeson.Types.Internal.Options>_R
                                    ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                            Data.Aeson.Types.Internal.Value
                                            Data.Aeson.Types.Generic.Zero
                                            a1>_R
                                    ->_R <GHC.Generics.K1 GHC.Generics.R Main.LogStatus a1>_R
                                    ->_R Data.Tagged.N:Tagged[0]
                                             <*>_N
                                             <Data.Aeson.Types.Generic.True>_P
                                             <Data.Aeson.Types.Internal.Value>_R)
                                   (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                             <Data.Aeson.Types.Generic.Zero>_N
                                             <GHC.Generics.K1 GHC.Generics.R Main.LogStatus>_N)))
                              @ GHC.Prim.Any
                              Main.$fToJSONHabit_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <Main.LogStatus>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "logStatus")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R Main.LogStatus>_R) <GHC.Prim.Any>_N))
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
f1ef031701df02ad797a94a8eeae00be
  $w$dFromPair ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons
                   Main.$fFromJSONLogStatus17
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
a8c3f3d6efafa829f82c17f284761abf
  $w$dFromPair1 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons1
                   Main.$fFromJSONLogStatus17
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
03d02539a6ce5886d7797241cec9f829
  $w$dFromPair2 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons2
                   Main.$fFromJSONLogStatus17
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
61e9a93fbcb20ee39b79a6a9e07a6d54
  $w$dFromTaggedObject ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Main.$fFromJSONLogStatus11
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
11fec2e0fea27bf89ff0a9d8da26a113
  $w$dFromTaggedObject1 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Main.$fFromJSONLogStatus11
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons1
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
4e5d2c7dd63f050599b466b4fe9ee40b
  $w$dFromTaggedObject2 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Main.$fFromJSONLogStatus11
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons2
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
74a77336cb1f999e1600cf24e352eb25
  $w$dFromUntaggedValue ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 2, Strictness: <L,U(A,C(U),A,A,A,A)><L,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1
                             a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons2
                       @ a1
                       w
                       w1
                 } in
                 let {
                   m1 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons1
                       @ a1
                       w
                       w1
                 } in
                 let {
                   m2 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons
                       @ a1
                       w
                       w1
                 } in
                 (\ @ (f :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:+:)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Skipped"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                a1)
                             f
                             r) ->
                  let {
                    lvl204 :: f r
                    = let {
                        lvl53 :: f r
                        = m2
                            `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                  a1>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a2 :: GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                        a1) ->
                             ks
                               (GHC.Generics.R1
                                  @ (GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1)
                                  @ (GHC.Generics.C1
                                       ('GHC.Generics.MetaCons
                                          "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           "Skipped"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1)
                                  @ a1
                                  (GHC.Generics.R1
                                     @ (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                     @ (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                     @ a1
                                     a2)))
                      } in
                      m1
                        `cast`
                      (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1>_R)
                        @ f
                        @ r
                        path
                        (\ (ds :: Data.Aeson.Types.Internal.JSONPath)
                           (ds1 :: GHC.Base.String) ->
                         lvl53)
                        (\ (a2 :: GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                    a1) ->
                         ks
                           (GHC.Generics.R1
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Skipped"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                              @ a1
                              (GHC.Generics.L1
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                 @ a1
                                 a2)))
                  } in
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1
                          a1>_R)
                    @ f
                    @ r
                    path
                    (\ (ds :: Data.Aeson.Types.Internal.JSONPath)
                       (ds1 :: GHC.Base.String) ->
                     lvl204)
                    (\ (a2 :: GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                                a1) ->
                     ks
                       (GHC.Generics.L1
                          @ (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                          @ (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                          @ a1
                          a2)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:+:)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1)
                              (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Skipped"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1)
                              a1>_R))) -}
d61bb856a1a0f44cd0e1e1cfec2cc3e7
  $w$dGToJSON ::
    Main.Year
    -> Main.Month -> Main.Day -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 3, Strictness: <L,1*U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: Main.Year)
                   (ww1 :: Main.Month)
                   (ww2 :: Main.Day) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                3#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case GHC.Prim.writeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                ipv1
                                0#
                                (case ww of dt { DEFAULT ->
                                 Data.Aeson.Types.Internal.Number
                                   (Data.Scientific.Scientific dt 0#) })
                                ipv of s'# { DEFAULT ->
                         case GHC.Prim.writeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                ipv1
                                1#
                                (case ww1 of dt { DEFAULT ->
                                 Data.Aeson.Types.Internal.Number
                                   (Data.Scientific.Scientific dt 0#) })
                                s'# of s'#1 { DEFAULT ->
                         case GHC.Prim.writeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                ipv1
                                2#
                                (case ww2 of dt { DEFAULT ->
                                 Data.Aeson.Types.Internal.Number
                                   (Data.Scientific.Scientific dt 0#) })
                                s'#1 of s'#2 { DEFAULT ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                ipv1
                                s'#2 of ds2 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              0#
                              3#
                              ipv3 #) } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt #) } }) -}
19b3ad79fbb024d54b39d198db10b7a7
  $w$dGToJSON1 ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         Main.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Main.$fToJSONHabit15
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
360f710525e4e7472b10734ad043c2e6
  $w$dHasServer1 ::
    Data.Proxy.Proxy
      (("habits"
        Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                              '[Servant.API.ContentTypes.JSON] Main.Habit
                            Servant.API.Sub.:> Servant.API.Verbs.Post
                                                 '[Servant.API.ContentTypes.JSON] [Main.Habit]))
       Servant.API.Alternative.:<|> ("habits"
                                     Servant.API.Sub.:> Servant.API.Verbs.Get
                                                          '[Servant.API.ContentTypes.JSON]
                                                          [Main.Habit]))
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (("habits"
              Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                    '[Servant.API.ContentTypes.JSON] Main.Habit
                                  Servant.API.Sub.:> Servant.API.Verbs.Post
                                                       '[Servant.API.ContentTypes.JSON]
                                                       [Main.Habit]))
             Servant.API.Alternative.:<|> ("habits"
                                           Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                '[Servant.API.ContentTypes.JSON]
                                                                [Main.Habit])))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 3, Strictness: <S,1*H><L,U><L,U>, Inline: [0],
     Unfolding: (\ @ env
                   (w :: Data.Proxy.Proxy
                           (("habits"
                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                   '[Servant.API.ContentTypes.JSON] Main.Habit
                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                      '[Servant.API.ContentTypes.JSON]
                                                                      [Main.Habit]))
                            Servant.API.Alternative.:<|> ("habits"
                                                          Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                               '[Servant.API.ContentTypes.JSON]
                                                                               [Main.Habit])))
                   (w1 :: Servant.Server.Internal.Context.Context '[])
                   (w2 :: Servant.Server.Internal.RoutingApplication.Delayed
                            env
                            (Servant.Server.Internal.Server
                               (("habits"
                                 Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                       '[Servant.API.ContentTypes.JSON] Main.Habit
                                                     Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                          '[Servant.API.ContentTypes.JSON]
                                                                          [Main.Habit]))
                                Servant.API.Alternative.:<|> ("habits"
                                                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                   [Main.Habit])))) ->
                 Servant.Server.Internal.Router.choice
                   @ env
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   (Servant.Server.Internal.Router.StaticRouter
                      @ env
                      @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              Main.$sserve7 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Map.Base.Bin
                         @ Data.Text.Internal.Text
                         @ (Servant.Server.Internal.Router.Router'
                              env Servant.Server.Internal.RoutingApplication.RoutingApplication)
                         1#
                         dt
                         (Servant.Server.Internal.$w$croute3
                            @ *
                            @ '[Servant.API.ContentTypes.JSON]
                            @ Main.Habit
                            @ (Servant.API.Verbs.Verb
                                 'Network.HTTP.Types.Method.POST
                                 200
                                 '[Servant.API.ContentTypes.JSON]
                                 [Main.Habit])
                            @ '[]
                            Main.$sserve6
                              `cast`
                            (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                                      <'[Servant.API.ContentTypes.JSON]>_N <Main.Habit>_N))
                            Main.$sserve5
                              `cast`
                            (Sym (Servant.Server.Internal.N:HasServer[0]
                                      <*>_N
                                      <Servant.API.Verbs.Verb
                                         'Network.HTTP.Types.Method.POST
                                         200
                                         '[Servant.API.ContentTypes.JSON]
                                         [Main.Habit]>_N
                                      <'[]>_N))
                            @ env
                            (Data.Proxy.Proxy
                               @ *
                               @ (Servant.API.ReqBody.ReqBody
                                    '[Servant.API.ContentTypes.JSON] Main.Habit
                                  Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                       'Network.HTTP.Types.Method.POST
                                                       200
                                                       '[Servant.API.ContentTypes.JSON]
                                                       [Main.Habit]))
                            w1
                            (Servant.Server.Internal.RoutingApplication.$fFunctorDelayed_$cfmap
                               @ env
                               @ (Servant.Server.Internal.Server
                                    ("habits"
                                     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                           '[Servant.API.ContentTypes.JSON]
                                                           Main.Habit
                                                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                              '[Servant.API.ContentTypes.JSON]
                                                                              [Main.Habit]))
                                  Servant.API.Alternative.:<|> Servant.Server.Internal.ServerT
                                                                 ("habits"
                                                                  Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                       '[Servant.API.ContentTypes.JSON]
                                                                                       [Main.Habit])
                                                                 (Control.Monad.Trans.Except.ExceptT
                                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                                    GHC.Types.IO))
                               @ (Servant.Server.Internal.Server
                                    ("habits"
                                     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                           '[Servant.API.ContentTypes.JSON]
                                                           Main.Habit
                                                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                              '[Servant.API.ContentTypes.JSON]
                                                                              [Main.Habit])))
                               (Servant.Server.Internal.$fHasServerTYPE:<|>context2
                                  @ ("habits"
                                     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                           '[Servant.API.ContentTypes.JSON]
                                                           Main.Habit
                                                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                              '[Servant.API.ContentTypes.JSON]
                                                                              [Main.Habit]))
                                  @ ("habits"
                                     Servant.API.Sub.:> Servant.API.Verbs.Get
                                                          '[Servant.API.ContentTypes.JSON]
                                                          [Main.Habit]))
                               w2
                                 `cast`
                               (Servant.Server.Internal.RoutingApplication.Delayed
                                  <env>_R
                                  (Sub (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                            <"habits"
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [Main.Habit]>_N
                                            <"habits"
                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   Main.Habit
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      [Main.Habit])>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))_R)
                              `cast`
                            (Servant.Server.Internal.RoutingApplication.Delayed
                               <env>_R
                               (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                         <*>_N
                                         <Servant.API.ReqBody.ReqBody
                                            '[Servant.API.ContentTypes.JSON] Main.Habit
                                          Servant.API.Sub.:> Servant.API.Verbs.Post
                                                               '[Servant.API.ContentTypes.JSON]
                                                               [Main.Habit]>_N
                                         <"habits">_N
                                         <Control.Monad.Trans.Except.ExceptT
                                            Servant.Server.Internal.ServantErr.ServantErr
                                            GHC.Types.IO>_N)))_R)
                         (Data.Map.Base.Tip
                            @ Data.Text.Internal.Text
                            @ (Servant.Server.Internal.Router.Router'
                                 env Servant.Server.Internal.RoutingApplication.RoutingApplication))
                         (Data.Map.Base.Tip
                            @ Data.Text.Internal.Text
                            @ (Servant.Server.Internal.Router.Router'
                                 env
                                 Servant.Server.Internal.RoutingApplication.RoutingApplication)) } })
                      (GHC.Types.[]
                         @ (env
                            -> Servant.Server.Internal.RoutingApplication.RoutingApplication)))
                   (Servant.Server.Internal.Router.StaticRouter
                      @ env
                      @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              Main.$sserve7 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Map.Base.Bin
                         @ Data.Text.Internal.Text
                         @ (Servant.Server.Internal.Router.Router'
                              env Servant.Server.Internal.RoutingApplication.RoutingApplication)
                         1#
                         dt
                         (Main.$sserve3
                            @ env
                            (Servant.Server.Internal.RoutingApplication.$fFunctorDelayed_$cfmap
                               @ env
                               @ (Servant.Server.Internal.ServerT
                                    ("habits"
                                     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                           '[Servant.API.ContentTypes.JSON]
                                                           Main.Habit
                                                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                              '[Servant.API.ContentTypes.JSON]
                                                                              [Main.Habit]))
                                    (Control.Monad.Trans.Except.ExceptT
                                       Servant.Server.Internal.ServantErr.ServantErr GHC.Types.IO)
                                  Servant.API.Alternative.:<|> Servant.Server.Internal.Server
                                                                 ("habits"
                                                                  Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                       '[Servant.API.ContentTypes.JSON]
                                                                                       [Main.Habit]))
                               @ (Servant.Server.Internal.Server
                                    ("habits"
                                     Servant.API.Sub.:> Servant.API.Verbs.Get
                                                          '[Servant.API.ContentTypes.JSON]
                                                          [Main.Habit]))
                               (Servant.Server.Internal.$fHasServerTYPE:<|>context1
                                  @ ("habits"
                                     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                           '[Servant.API.ContentTypes.JSON]
                                                           Main.Habit
                                                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                              '[Servant.API.ContentTypes.JSON]
                                                                              [Main.Habit]))
                                  @ ("habits"
                                     Servant.API.Sub.:> Servant.API.Verbs.Get
                                                          '[Servant.API.ContentTypes.JSON]
                                                          [Main.Habit]))
                               w2
                                 `cast`
                               (Servant.Server.Internal.RoutingApplication.Delayed
                                  <env>_R
                                  (Sub (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                            <"habits"
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [Main.Habit]>_N
                                            <"habits"
                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   Main.Habit
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      [Main.Habit])>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))_R)
                              `cast`
                            (Servant.Server.Internal.RoutingApplication.Delayed
                               <env>_R
                               (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                         <*>_N
                                         <Servant.API.Verbs.Verb
                                            'Network.HTTP.Types.Method.GET
                                            200
                                            '[Servant.API.ContentTypes.JSON]
                                            [Main.Habit]>_N
                                         <"habits">_N
                                         <Control.Monad.Trans.Except.ExceptT
                                            Servant.Server.Internal.ServantErr.ServantErr
                                            GHC.Types.IO>_N)))_R)
                         (Data.Map.Base.Tip
                            @ Data.Text.Internal.Text
                            @ (Servant.Server.Internal.Router.Router'
                                 env Servant.Server.Internal.RoutingApplication.RoutingApplication))
                         (Data.Map.Base.Tip
                            @ Data.Text.Internal.Text
                            @ (Servant.Server.Internal.Router.Router'
                                 env
                                 Servant.Server.Internal.RoutingApplication.RoutingApplication)) } })
                      (GHC.Types.[]
                         @ (env
                            -> Servant.Server.Internal.RoutingApplication.RoutingApplication)))) -}
4b215952d1849ccdeaffe719cc3e14b7
  $w$dSumFromString ::
    (GHC.Base.String -> GHC.Base.String)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 4, Strictness: <C(S),C(U)><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Prim.ByteArray#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                        @ ('GHC.Generics.MetaCons
                             "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons2
                        @ a1
                        ww
                        ww1
                        ww2
                        ww3 of wild {
                   GHC.Base.Nothing
                   -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                             @ ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons1
                             @ a1
                             ww
                             ww1
                             ww2
                             ww3 of wild1 {
                        GHC.Base.Nothing
                        -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                                  @ ('GHC.Generics.MetaCons
                                       "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons
                                  @ a1
                                  ww
                                  ww1
                                  ww2
                                  ww3 of wild2 {
                             GHC.Base.Nothing
                             -> GHC.Base.Nothing
                                  @ ((GHC.Generics.:+:)
                                       (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Skipped"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                       a1)
                             GHC.Base.Just x
                             -> GHC.Base.Just
                                  @ ((GHC.Generics.:+:)
                                       (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Skipped"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                       a1)
                                  (GHC.Generics.R1
                                     @ (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                     @ (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Skipped"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                     @ a1
                                     (GHC.Generics.R1
                                        @ (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "NotCompleted"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False)
                                             GHC.Generics.U1)
                                        @ (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1)
                                        @ a1
                                        x)) }
                        GHC.Base.Just x
                        -> GHC.Base.Just
                             @ ((GHC.Generics.:+:)
                                  (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Skipped"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  a1)
                             (GHC.Generics.R1
                                @ (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1)
                                @ (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Skipped"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                @ a1
                                (GHC.Generics.L1
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ a1
                                   x)) }
                   GHC.Base.Just x
                   -> GHC.Base.Just
                        @ ((GHC.Generics.:+:)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Skipped"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                             a1)
                        (GHC.Generics.L1
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
                           @ (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Skipped"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ a1
                           x) }) -}
5c8a272b11d8d29bcf4d9275b2da67be
  $w$dUntaggedValueObj ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 2, Strictness: <C(S),1*C1(U)><S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (w :: (GHC.Generics.:+:)
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1)
                           a1) ->
                 case w of wild {
                   GHC.Generics.L1 x
                   -> Data.Aeson.Types.ToJSON.$w$cuntaggedValueObj
                        @ ('GHC.Generics.MetaCons
                             "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        @ Data.Aeson.Types.Generic.Zero
                        Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons2
                        @ a1
                        ww
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cuntaggedValueObj
                             @ ('GHC.Generics.MetaCons
                                  "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             @ Data.Aeson.Types.Generic.Zero
                             Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons1
                             @ a1
                             ww
                        GHC.Generics.R1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cuntaggedValueObj
                             @ ('GHC.Generics.MetaCons
                                  "Skipped" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             @ Data.Aeson.Types.Generic.Zero
                             Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons
                             @ a1
                             ww } }) -}
a22178114454506c132fac24348570e1
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
7220f6647f6e8f8964f10a0e879dfc1f
  type Day = GHC.Integer.Type.Integer
df72f2232f151d94fc10026fd2e64ba1
  data Habit
    = Habit {habitId :: GHC.Integer.Type.Integer,
             habitName :: GHC.Base.String,
             habitMotivation :: GHC.Base.Maybe GHC.Base.String,
             habitChain :: GHC.Base.Maybe [Main.LogItem]}
478d140830511cb9f712d5c12b1ab022
  type HabitApi =
    ("habits"
     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] Main.Habit
                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                              '[Servant.API.ContentTypes.JSON] [Main.Habit]))
    Servant.API.Alternative.:<|> ("habits"
                                  Servant.API.Sub.:> Servant.API.Verbs.Get
                                                       '[Servant.API.ContentTypes.JSON]
                                                       [Main.Habit])
29663e4bbc1174feb5504940b2e6dc3d
  type HabitApi' =
    Main.HabitApi Servant.API.Alternative.:<|> Servant.API.Raw.Raw
372a9bc1b876980640cb96e463fd2a7b
  data LogItem
    = LogItem {logDate :: (Main.Year, Main.Month, Main.Day),
               logStatus :: Main.LogStatus}
38637d1ae37036cdd2876c628606e97a
  data LogStatus = Completed | NotCompleted | Skipped
57330b0943774bcf9a9dad3b969337f2
  type Month = GHC.Integer.Type.Integer
df72f2232f151d94fc10026fd2e64ba1
  axiom Rep_Habit::
      GHC.Generics.Rep Main.Habit
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "Habit" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Habit" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "habitId")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "habitName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "habitMotivation")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Base.String))
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "habitChain")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe [Main.LogItem])))))
372a9bc1b876980640cb96e463fd2a7b
  axiom Rep_LogItem::
      GHC.Generics.Rep Main.LogItem
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "LogItem" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "LogItem" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "logDate")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (Main.Year, Main.Month, Main.Day))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "logStatus")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Main.LogStatus)))
38637d1ae37036cdd2876c628606e97a
  axiom Rep_LogStatus::
      GHC.Generics.Rep Main.LogStatus
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "LogStatus" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Completed" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "NotCompleted" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Skipped"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
18629c62e36bcb00fc9e665362956e55
  type Year = GHC.Integer.Type.Integer
81900e6a3b5458d3b185be19ab759295
  habitChain :: Main.Habit -> GHC.Base.Maybe [Main.LogItem]
  RecSel Left Main.Habit
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Habit) ->
                 case ds of wild { Main.Habit ds1 ds2 ds3 ds4 -> ds4 }) -}
fb759b552d96a37c364dc973c08ae2f7
  habitId :: Main.Habit -> GHC.Integer.Type.Integer
  RecSel Left Main.Habit
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Habit) ->
                 case ds of wild { Main.Habit ds1 ds2 ds3 ds4 -> ds1 }) -}
d25635d42df5e166c127c77f1bc26255
  habitMotivation :: Main.Habit -> GHC.Base.Maybe GHC.Base.String
  RecSel Left Main.Habit
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Habit) ->
                 case ds of wild { Main.Habit ds1 ds2 ds3 ds4 -> ds3 }) -}
805d5057bdd440828dc7fe7bc7e20292
  habitName :: Main.Habit -> GHC.Base.String
  RecSel Left Main.Habit
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Habit) ->
                 case ds of wild { Main.Habit ds1 ds2 ds3 ds4 -> ds2 }) -}
b9f7bca906791d7f81e995afa5d83f1e
  logDate :: Main.LogItem -> (Main.Year, Main.Month, Main.Day)
  RecSel Left Main.LogItem
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.LogItem) ->
                 case ds of wild { Main.LogItem ds1 ds2 -> ds1 }) -}
8883f51b41f8ac870d02977f03f8fda2
  logStatus :: Main.LogItem -> Main.LogStatus
  RecSel Left Main.LogItem
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.LogItem) ->
                 case ds of wild { Main.LogItem ds1 ds2 -> ds2 }) -}
eaea448248756485c34030ede70400f5
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
7b2cb688aeb5f4e16c08ff852c9f877b
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Data.Text.IO.writeFile1
                        Main.main20
                        Main.main10
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.newTVar#
                        @ [Main.Habit]
                        @ GHC.Prim.RealWorld
                        (GHC.Types.[] @ Main.Habit)
                        ipv of ds { (#,#) ipv2 ipv3 ->
                 Network.Wai.Handler.Warp.Run.$wrunSettings
                   Main.main9
                   Network.Wai.Handler.Warp.Settings.defaultSettings16
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings8
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (Servant.Server.Internal.RoutingApplication.toApplication
                      (let {
                         r :: Servant.Server.Internal.Router.Router ()
                         = case Servant.Server.Internal.$w$croute7
                                  @ '[]
                                  @ ()
                                  (Data.Proxy.Proxy @ * @ Servant.API.Raw.Raw)
                                  Main.main2 of ww { Unit# ww1 ->
                           let {
                             dt :: Main.Habit
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         Data.Either.Either
                                           Servant.Server.Internal.ServantErr.ServantErr
                                           [Main.Habit] #)
                               {- Arity: 2, Strictness: <L,U><S,U>,
                                  Unfolding: InlineRule (2, True, False)
                                             (\ (habit :: Main.Habit)
                                                (s1 :: GHC.Prim.State#
                                                         GHC.Prim.RealWorld)[OneShot] ->
                                              case GHC.Prim.atomically#
                                                     @ [Main.Habit]
                                                     (\ (s2 :: GHC.Prim.State#
                                                                 GHC.Prim.RealWorld)[OneShot] ->
                                                      case GHC.Prim.readTVar#
                                                             @ GHC.Prim.RealWorld
                                                             @ [Main.Habit]
                                                             ipv3
                                                             s2 of ds2 { (#,#) ipv4 ipv5 ->
                                                      let {
                                                        newList :: [Main.Habit]
                                                        = GHC.Types.: @ Main.Habit habit ipv5
                                                      } in
                                                      case GHC.Prim.writeTVar#
                                                             @ GHC.Prim.RealWorld
                                                             @ [Main.Habit]
                                                             ipv3
                                                             newList
                                                             ipv4 of s2# { DEFAULT ->
                                                      (# s2#, newList #) } })
                                                     s1 of ds2 { (#,#) ipv4 ipv5 ->
                                              (# ipv4,
                                                 Data.Either.Right
                                                   @ Servant.Server.Internal.ServantErr.ServantErr
                                                   @ [Main.Habit]
                                                   ipv5 #) }) -}
                             = \ (habit :: Main.Habit)
                                 (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               case GHC.Prim.atomically#
                                      @ [Main.Habit]
                                      (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.readTVar#
                                              @ GHC.Prim.RealWorld
                                              @ [Main.Habit]
                                              ipv3
                                              s2 of ds2 { (#,#) ipv4 ipv5 ->
                                       let {
                                         newList :: [Main.Habit]
                                         = GHC.Types.: @ Main.Habit habit ipv5
                                       } in
                                       case GHC.Prim.writeTVar#
                                              @ GHC.Prim.RealWorld
                                              @ [Main.Habit]
                                              ipv3
                                              newList
                                              ipv4 of s2# { DEFAULT ->
                                       (# s2#, newList #) } })
                                      s1 of ds2 { (#,#) ipv4 ipv5 ->
                               (# ipv4,
                                  Data.Either.Right
                                    @ Servant.Server.Internal.ServantErr.ServantErr
                                    @ [Main.Habit]
                                    ipv5 #) }
                           } in
                           let {
                             dt1 :: GHC.Prim.State# GHC.Prim.RealWorld
                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          Data.Either.Either
                                            Servant.Server.Internal.ServantErr.ServantErr
                                            [Main.Habit] #)
                               {- Arity: 1, Strictness: <S,U>,
                                  Unfolding: InlineRule (1, True, False)
                                             (\ (s1 :: GHC.Prim.State#
                                                         GHC.Prim.RealWorld)[OneShot] ->
                                              case GHC.Prim.readTVarIO#
                                                     @ GHC.Prim.RealWorld
                                                     @ [Main.Habit]
                                                     ipv3
                                                     s1 of ds2 { (#,#) ipv4 ipv5 ->
                                              (# ipv4,
                                                 Data.Either.Right
                                                   @ Servant.Server.Internal.ServantErr.ServantErr
                                                   @ [Main.Habit]
                                                   ipv5 #) }) -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               case GHC.Prim.readTVarIO#
                                      @ GHC.Prim.RealWorld
                                      @ [Main.Habit]
                                      ipv3
                                      s1 of ds2 { (#,#) ipv4 ipv5 ->
                               (# ipv4,
                                  Data.Either.Right
                                    @ Servant.Server.Internal.ServantErr.ServantErr
                                    @ [Main.Habit]
                                    ipv5 #) }
                           } in
                           let {
                             lvl53 :: (Main.Habit
                                       -> Control.Monad.Trans.Except.ExceptT
                                            Servant.Server.Internal.ServantErr.ServantErr
                                            GHC.Types.IO
                                            [Main.Habit])
                                      Servant.API.Alternative.:<|> Control.Monad.Trans.Except.ExceptT
                                                                     Servant.Server.Internal.ServantErr.ServantErr
                                                                     GHC.Types.IO
                                                                     [Main.Habit]
                             = Servant.API.Alternative.:<|>
                                 @ (Main.Habit
                                    -> Control.Monad.Trans.Except.ExceptT
                                         Servant.Server.Internal.ServantErr.ServantErr
                                         GHC.Types.IO
                                         [Main.Habit])
                                 @ (Control.Monad.Trans.Except.ExceptT
                                      Servant.Server.Internal.ServantErr.ServantErr
                                      GHC.Types.IO
                                      [Main.Habit])
                                 dt
                                   `cast`
                                 (<Main.Habit>_R
                                  ->_R Trans
                                           (Sym (GHC.Types.N:IO[0]
                                                     <Data.Either.Either
                                                        Servant.Server.Internal.ServantErr.ServantErr
                                                        [Main.Habit]>_R))
                                           (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                     <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                     <GHC.Types.IO>_R
                                                     <[Main.Habit]>_N)))
                                 dt1
                                   `cast`
                                 (Trans
                                      (Sym (GHC.Types.N:IO[0]
                                                <Data.Either.Either
                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                   [Main.Habit]>_R))
                                      (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                <GHC.Types.IO>_R
                                                <[Main.Habit]>_N)))
                           } in
                           let {
                             lvl54 :: Servant.Server.Internal.RoutingApplication.RouteResult
                                        (Servant.Server.Internal.Server
                                           (("habits"
                                             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                   '[Servant.API.ContentTypes.JSON]
                                                                   Main.Habit
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      [Main.Habit]))
                                            Servant.API.Alternative.:<|> ("habits"
                                                                          Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                               '[Servant.API.ContentTypes.JSON]
                                                                                               [Main.Habit])))
                             = Servant.Server.Internal.RoutingApplication.Route
                                 @ (Servant.Server.Internal.Server
                                      (("habits"
                                        Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                              '[Servant.API.ContentTypes.JSON]
                                                              Main.Habit
                                                            Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                 '[Servant.API.ContentTypes.JSON]
                                                                                 [Main.Habit]))
                                       Servant.API.Alternative.:<|> ("habits"
                                                                     Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                          '[Servant.API.ContentTypes.JSON]
                                                                                          [Main.Habit])))
                                 lvl53
                                   `cast`
                                 (Trans
                                      (Trans
                                           (<Main.Habit>_R
                                            ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                               <Network.HTTP.Types.Method.StdMethod>_N
                                                               <[Main.Habit]>_N
                                                               <'[Servant.API.ContentTypes.JSON]>_N
                                                               <200>_N
                                                               <'Network.HTTP.Types.Method.POST>_N
                                                               <Control.Monad.Trans.Except.ExceptT
                                                                  Servant.Server.Internal.ServantErr.ServantErr
                                                                  GHC.Types.IO>_N)))
                                           (Trans
                                                (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                               <*>_N
                                                               <Main.Habit>_N
                                                               <'[Servant.API.ContentTypes.JSON]>_N
                                                               <Servant.API.Verbs.Verb
                                                                  'Network.HTTP.Types.Method.POST
                                                                  200
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [Main.Habit]>_N
                                                               <Control.Monad.Trans.Except.ExceptT
                                                                  Servant.Server.Internal.ServantErr.ServantErr
                                                                  GHC.Types.IO>_N)))
                                                (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                               <*>_N
                                                               <Servant.API.ReqBody.ReqBody
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  Main.Habit
                                                                Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                     [Main.Habit]>_N
                                                               <"habits">_N
                                                               <Control.Monad.Trans.Except.ExceptT
                                                                  Servant.Server.Internal.ServantErr.ServantErr
                                                                  GHC.Types.IO>_N))))
                                       Servant.API.Alternative.:<|> Trans
                                                                        (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                       <Network.HTTP.Types.Method.StdMethod>_N
                                                                                       <[Main.Habit]>_N
                                                                                       <'[Servant.API.ContentTypes.JSON]>_N
                                                                                       <200>_N
                                                                                       <'Network.HTTP.Types.Method.GET>_N
                                                                                       <Control.Monad.Trans.Except.ExceptT
                                                                                          Servant.Server.Internal.ServantErr.ServantErr
                                                                                          GHC.Types.IO>_N)))
                                                                        (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                                                       <*>_N
                                                                                       <Servant.API.Verbs.Verb
                                                                                          'Network.HTTP.Types.Method.GET
                                                                                          200
                                                                                          '[Servant.API.ContentTypes.JSON]
                                                                                          [Main.Habit]>_N
                                                                                       <"habits">_N
                                                                                       <Control.Monad.Trans.Except.ExceptT
                                                                                          Servant.Server.Internal.ServantErr.ServantErr
                                                                                          GHC.Types.IO>_N))))_R
                                      (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                                     <"habits"
                                                      Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                           '[Servant.API.ContentTypes.JSON]
                                                                           [Main.Habit]>_N
                                                     <"habits"
                                                      Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                            '[Servant.API.ContentTypes.JSON]
                                                                            Main.Habit
                                                                          Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                               '[Servant.API.ContentTypes.JSON]
                                                                                               [Main.Habit])>_N
                                                     <Control.Monad.Trans.Except.ExceptT
                                                        Servant.Server.Internal.ServantErr.ServantErr
                                                        GHC.Types.IO>_N))))
                           } in
                           Servant.Server.Internal.Router.choice
                             @ ()
                             @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                             (Main.$w$dHasServer1
                                @ ()
                                (Data.Proxy.Proxy
                                   @ *
                                   @ (("habits"
                                       Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                             '[Servant.API.ContentTypes.JSON]
                                                             Main.Habit
                                                           Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                '[Servant.API.ContentTypes.JSON]
                                                                                [Main.Habit]))
                                      Servant.API.Alternative.:<|> ("habits"
                                                                    Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                         '[Servant.API.ContentTypes.JSON]
                                                                                         [Main.Habit])))
                                Servant.Server.Internal.Context.$WEmptyContext
                                (Servant.Server.Internal.RoutingApplication.Delayed
                                   @ ()
                                   @ (Servant.Server.Internal.Server
                                        (("habits"
                                          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                '[Servant.API.ContentTypes.JSON]
                                                                Main.Habit
                                                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                   [Main.Habit]))
                                         Servant.API.Alternative.:<|> ("habits"
                                                                       Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                            '[Servant.API.ContentTypes.JSON]
                                                                                            [Main.Habit])))
                                   @ ()
                                   @ ()
                                   @ ()
                                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                                     `cast`
                                   (<()>_R
                                    ->_R Trans
                                             (<Network.Wai.Internal.Request>_R
                                              ->_R Sym (GHC.Types.N:IO[0]
                                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                                               ()>_R))
                                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                                       <()>_R)))
                                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                                     `cast`
                                   (Trans
                                        (<Network.Wai.Internal.Request>_R
                                         ->_R Sym (GHC.Types.N:IO[0]
                                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                                          ()>_R))
                                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                                  <()>_R)))
                                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                                     `cast`
                                   (Trans
                                        (<Network.Wai.Internal.Request>_R
                                         ->_R Sym (GHC.Types.N:IO[0]
                                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                                          ()>_R))
                                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                                  <()>_R)))
                                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                                     `cast`
                                   (Trans
                                        (<Network.Wai.Internal.Request>_R
                                         ->_R Sym (GHC.Types.N:IO[0]
                                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                                          ()>_R))
                                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                                  <()>_R)))
                                   (\ (c :: ())
                                      (a1 :: ())
                                      (b1 :: ())
                                      (req :: Network.Wai.Internal.Request) ->
                                    lvl54)))
                             (Servant.Server.Internal.Router.RawRouter
                                @ ()
                                @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                                ww1) }
                       } in
                       \ (eta :: Network.Wai.Internal.Request)
                         (eta1 :: Servant.Server.Internal.RoutingApplication.RouteResult
                                    Network.Wai.Internal.Response
                                  -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)[OneShot] ->
                       Servant.Server.Internal.Router.runRouterEnv
                         @ ()
                         r
                         GHC.Tuple.()
                         eta
                         eta1))
                   ipv2 } }) -}
67fa58c2703f5e75e3e05838912db3ea
  main10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.concat Main.main11) -}
357d1f2046b3f9561b4f3d6204fb65aa
  main11 :: [Data.Text.Internal.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Main.main16
                   Main.main12) -}
ddd5e9eb61024af69a8b0e37272490bd
  main12 :: [Data.Text.Internal.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Main.main13
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
abef89f9f1857e3f47718481b1e3f37e
  main13 :: Data.Text.Internal.Text
  {- Unfolding: (Servant.JS.Vanilla.generateVanillaJS
                   Main.main14
                     `cast`
                   (Sub (Servant.Foreign.Internal.D:R:ForeignftypeVerb[0]
                             <*>_N
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <[Main.Habit]>_N
                             <'[Servant.API.ContentTypes.JSON]>_N
                             <200>_N
                             <'Network.HTTP.Types.Method.GET>_N
                             <Servant.API.ContentTypes.NoContent>_N))) -}
9c1337ffab9de8f3329d6ae516b47e99
  main14 ::
    Servant.Foreign.Internal.Foreign
      Servant.API.ContentTypes.NoContent
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         [Main.Habit])
  {- Unfolding: (Servant.Foreign.Internal.$w$cforeignFor1
                   @ *
                   @ "habits"
                   @ Servant.Foreign.Internal.NoTypes
                   @ Servant.API.ContentTypes.NoContent
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        [Main.Habit])
                   Main.$sserve8
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"habits">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"habits">_N))
                   Main.main15
                     `cast`
                   (Sym (Servant.Foreign.Internal.N:HasForeign[0]
                             <*>_N
                             <Servant.Foreign.Internal.NoTypes>_N
                             <Servant.API.ContentTypes.NoContent>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                [Main.Habit]>_N))
                   (Data.Proxy.Proxy @ * @ Servant.Foreign.Internal.NoTypes)
                   (Data.Proxy.Proxy @ * @ Servant.API.ContentTypes.NoContent)
                   (Data.Proxy.Proxy
                      @ GHC.Types.*
                      @ ("habits"
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              [Main.Habit]))
                   (Servant.Foreign.Internal.defReq
                      @ Servant.API.ContentTypes.NoContent)) -}
857a5a8398ca55ec01036a6ae2d85792
  main15 ::
    Data.Proxy.Proxy Servant.Foreign.Internal.NoTypes
    -> Data.Proxy.Proxy Servant.API.ContentTypes.NoContent
    -> Data.Proxy.Proxy
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [Main.Habit])
    -> Servant.Foreign.Internal.Req Servant.API.ContentTypes.NoContent
    -> Servant.Foreign.Internal.Foreign
         Servant.API.ContentTypes.NoContent
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [Main.Habit])
  {- Arity: 4,
     Unfolding: (\ (w3 :: Data.Proxy.Proxy
                            Servant.Foreign.Internal.NoTypes)[OneShot]
                   (w4 :: Data.Proxy.Proxy
                            Servant.API.ContentTypes.NoContent)[OneShot]
                   (w5 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.GET
                               200
                               '[Servant.API.ContentTypes.JSON]
                               [Main.Habit]))[OneShot]
                   (w6 :: Servant.Foreign.Internal.Req
                            Servant.API.ContentTypes.NoContent)[OneShot] ->
                 case w4 of w7 { Data.Proxy.Proxy ->
                 case w5 of w8 { Data.Proxy.Proxy ->
                 case w6 of ww { Servant.Foreign.Internal.Req ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case Servant.Foreign.Internal.$w$cforeignFor8
                        @ Network.HTTP.Types.Method.StdMethod
                        @ *
                        @ *
                        @ '[Servant.API.ContentTypes.JSON]
                        @ Servant.Foreign.Internal.NoTypes
                        @ Servant.API.ContentTypes.NoContent
                        @ [Main.Habit]
                        @ 'Network.HTTP.Types.Method.GET
                        @ 200
                        (Servant.Foreign.Internal.$fHasForeignTypekTYPENoTypesNoContentftype_$ctypeFor
                           @ *
                           @ [Main.Habit])
                          `cast`
                        (Sym (Servant.Foreign.Internal.N:HasForeignType[0]
                                  <*>_N
                                  <*>_N
                                  <Servant.Foreign.Internal.NoTypes>_N
                                  <Servant.API.ContentTypes.NoContent>_N
                                  <[Main.Habit]>_N))
                        Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                          `cast`
                        (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                                  <Network.HTTP.Types.Method.StdMethod>_N
                                  <'Network.HTTP.Types.Method.GET>_N))
                        w3
                        (Data.Proxy.Proxy @ * @ Servant.API.ContentTypes.NoContent)
                        (Data.Proxy.Proxy
                           @ GHC.Types.*
                           @ (Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                [Main.Habit]))
                        ww1
                        ww3
                        ww4
                        ww6 of ww7 { (#,,,,,#) ww8 ww9 ww10 ww11 ww12 ww13 ->
                 (Servant.Foreign.Internal.Req
                    @ Servant.API.ContentTypes.NoContent
                    ww8
                    ww9
                    ww10
                    ww11
                    ww12
                    ww13)
                   `cast`
                 (Sub (Sym (Servant.Foreign.Internal.D:R:ForeignftypeVerb[0]
                                <*>_N
                                <Network.HTTP.Types.Method.StdMethod>_N
                                <[Main.Habit]>_N
                                <'[Servant.API.ContentTypes.JSON]>_N
                                <200>_N
                                <'Network.HTTP.Types.Method.GET>_N
                                <Servant.API.ContentTypes.NoContent>_N))) } } } }) -}
ee8660f6f164c9a55ce200a07ee43a0f
  main16 :: Data.Text.Internal.Text
  {- Unfolding: (Servant.JS.Vanilla.generateVanillaJS
                   Main.main17
                     `cast`
                   (Trans
                        (Sub (Servant.Foreign.Internal.D:R:Foreignftype:>4[0]
                                  <*>_N
                                  <Main.Habit>_N
                                  <'[Servant.API.ContentTypes.JSON]>_N
                                  <Servant.API.Verbs.Verb
                                     'Network.HTTP.Types.Method.POST
                                     200
                                     '[Servant.API.ContentTypes.JSON]
                                     [Main.Habit]>_N
                                  <Servant.API.ContentTypes.NoContent>_N))
                        (Sub (Servant.Foreign.Internal.D:R:ForeignftypeVerb[0]
                                  <*>_N
                                  <Network.HTTP.Types.Method.StdMethod>_N
                                  <[Main.Habit]>_N
                                  <'[Servant.API.ContentTypes.JSON]>_N
                                  <200>_N
                                  <'Network.HTTP.Types.Method.POST>_N
                                  <Servant.API.ContentTypes.NoContent>_N)))) -}
617c43077bb25cbd426c8ff8bf9304d8
  main17 ::
    Servant.Foreign.Internal.Foreign
      Servant.API.ContentTypes.NoContent
      (Servant.API.ReqBody.ReqBody
         '[Servant.API.ContentTypes.JSON] Main.Habit
       Servant.API.Sub.:> Servant.API.Verbs.Post
                            '[Servant.API.ContentTypes.JSON] [Main.Habit])
  {- Unfolding: (Servant.Foreign.Internal.$w$cforeignFor1
                   @ *
                   @ "habits"
                   @ Servant.Foreign.Internal.NoTypes
                   @ Servant.API.ContentTypes.NoContent
                   @ (Servant.API.ReqBody.ReqBody
                        '[Servant.API.ContentTypes.JSON] Main.Habit
                      Servant.API.Sub.:> Servant.API.Verbs.Post
                                           '[Servant.API.ContentTypes.JSON] [Main.Habit])
                   Main.$sserve8
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"habits">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"habits">_N))
                   Main.main18
                     `cast`
                   (Sym (Servant.Foreign.Internal.N:HasForeign[0]
                             <*>_N
                             <Servant.Foreign.Internal.NoTypes>_N
                             <Servant.API.ContentTypes.NoContent>_N
                             <Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] Main.Habit
                              Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                   'Network.HTTP.Types.Method.POST
                                                   200
                                                   '[Servant.API.ContentTypes.JSON]
                                                   [Main.Habit]>_N))
                   (Data.Proxy.Proxy @ * @ Servant.Foreign.Internal.NoTypes)
                   (Data.Proxy.Proxy @ * @ Servant.API.ContentTypes.NoContent)
                   (Data.Proxy.Proxy
                      @ GHC.Types.*
                      @ ("habits"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] Main.Habit
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  [Main.Habit])))
                   (Servant.Foreign.Internal.defReq
                      @ Servant.API.ContentTypes.NoContent)) -}
7751dd9ea9e045590f699c7810e0bcf2
  main18 ::
    Data.Proxy.Proxy Servant.Foreign.Internal.NoTypes
    -> Data.Proxy.Proxy Servant.API.ContentTypes.NoContent
    -> Data.Proxy.Proxy
         (Servant.API.ReqBody.ReqBody
            '[Servant.API.ContentTypes.JSON] Main.Habit
          Servant.API.Sub.:> Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.POST
                               200
                               '[Servant.API.ContentTypes.JSON]
                               [Main.Habit])
    -> Servant.Foreign.Internal.Req Servant.API.ContentTypes.NoContent
    -> Servant.Foreign.Internal.Foreign
         Servant.API.ContentTypes.NoContent
         (Servant.API.ReqBody.ReqBody
            '[Servant.API.ContentTypes.JSON] Main.Habit
          Servant.API.Sub.:> Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.POST
                               200
                               '[Servant.API.ContentTypes.JSON]
                               [Main.Habit])
  {- Arity: 4,
     Unfolding: (\ (lang1 :: Data.Proxy.Proxy
                               Servant.Foreign.Internal.NoTypes)[OneShot]
                   (ftype1 :: Data.Proxy.Proxy
                                Servant.API.ContentTypes.NoContent)[OneShot]
                   (ds :: Data.Proxy.Proxy
                            (Servant.API.ReqBody.ReqBody
                               '[Servant.API.ContentTypes.JSON] Main.Habit
                             Servant.API.Sub.:> Servant.API.Verbs.Verb
                                                  'Network.HTTP.Types.Method.POST
                                                  200
                                                  '[Servant.API.ContentTypes.JSON]
                                                  [Main.Habit]))[OneShot]
                   (req :: Servant.Foreign.Internal.Req
                             Servant.API.ContentTypes.NoContent)[OneShot] ->
                 case ds of wild { Data.Proxy.Proxy ->
                 case req of wild1 { Servant.Foreign.Internal.Req x1 x2 x3 x4 x5 x6 ->
                 case ftype1 of w7 { Data.Proxy.Proxy ->
                 case Servant.Foreign.Internal.$w$cforeignFor8
                        @ Network.HTTP.Types.Method.StdMethod
                        @ *
                        @ *
                        @ '[Servant.API.ContentTypes.JSON]
                        @ Servant.Foreign.Internal.NoTypes
                        @ Servant.API.ContentTypes.NoContent
                        @ [Main.Habit]
                        @ 'Network.HTTP.Types.Method.POST
                        @ 200
                        (Servant.Foreign.Internal.$fHasForeignTypekTYPENoTypesNoContentftype_$ctypeFor
                           @ *
                           @ [Main.Habit])
                          `cast`
                        (Sym (Servant.Foreign.Internal.N:HasForeignType[0]
                                  <*>_N
                                  <*>_N
                                  <Servant.Foreign.Internal.NoTypes>_N
                                  <Servant.API.ContentTypes.NoContent>_N
                                  <[Main.Habit]>_N))
                        Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                          `cast`
                        (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                                  <Network.HTTP.Types.Method.StdMethod>_N
                                  <'Network.HTTP.Types.Method.POST>_N))
                        lang1
                        (Data.Proxy.Proxy @ * @ Servant.API.ContentTypes.NoContent)
                        (Data.Proxy.Proxy
                           @ GHC.Types.*
                           @ (Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                [Main.Habit]))
                        x1
                        x3
                        Main.main19
                        x6 of ww7 { (#,,,,,#) ww8 ww9 ww10 ww11 ww12 ww13 ->
                 (Servant.Foreign.Internal.Req
                    @ Servant.API.ContentTypes.NoContent
                    ww8
                    ww9
                    ww10
                    ww11
                    ww12
                    ww13)
                   `cast`
                 (Trans
                      (Sub (Sym (Servant.Foreign.Internal.D:R:ForeignftypeVerb[0]
                                     <*>_N
                                     <Network.HTTP.Types.Method.StdMethod>_N
                                     <[Main.Habit]>_N
                                     <'[Servant.API.ContentTypes.JSON]>_N
                                     <200>_N
                                     <'Network.HTTP.Types.Method.POST>_N
                                     <Servant.API.ContentTypes.NoContent>_N)))
                      (Sub (Sym (Servant.Foreign.Internal.D:R:Foreignftype:>4[0]
                                     <*>_N
                                     <Main.Habit>_N
                                     <'[Servant.API.ContentTypes.JSON]>_N
                                     <Servant.API.Verbs.Verb
                                        'Network.HTTP.Types.Method.POST
                                        200
                                        '[Servant.API.ContentTypes.JSON]
                                        [Main.Habit]>_N
                                     <Servant.API.ContentTypes.NoContent>_N)))) } } } }) -}
dd139138d1cdb0bd817d978e07876d4b
  main19 :: GHC.Base.Maybe Servant.API.ContentTypes.NoContent
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just
                   @ Servant.API.ContentTypes.NoContent
                   Servant.API.ContentTypes.NoContent) -}
86ec0086b19d37b43df620f8ff0bcac9
  main2 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      () (Servant.Server.Internal.Server Servant.API.Raw.Raw)
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server Servant.API.Raw.Raw)
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Main.main3) -}
1dd3b17970706efa9d0d52336f4e2c99
  main20 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.combine
                   Main.www
                   Main.main21) -}
e8cfb83a68d21bd49771278cb3fc0fad
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "api.js"#) -}
3c61d731c1e6b6efeb6c01a5ae129d06
  main22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ff4a3382893a13042f51b8f5756cd7e7
  main3 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server Servant.API.Raw.Raw)
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Main.main4) -}
7ddc9e38e558b396d867b556567efd51
  main4 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server Servant.API.Raw.Raw)
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server Servant.API.Raw.Raw)
                   Main.main5
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R <Network.Wai.Internal.Response
                               -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Network.Wai.Internal.ResponseReceived>_R))
                        (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPERawm[0]
                                       <Control.Monad.Trans.Except.ExceptT
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          GHC.Types.IO>_N))))) -}
9fee625b4dcfaf3967dc175fbb1add8a
  main5 ::
    Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 3,
     Unfolding: (Network.Wai.Application.Static.staticApp1
                   Main.main6) -}
b1bfe6d4c7d054e6e56e2214579c5edd
  main6 :: WaiAppStatic.Types.StaticSettings
  {- Unfolding: (case WaiAppStatic.Storage.Filesystem.$wdefaultFileServerSettings
                        Main.main7 of ww { (#,,,,,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 WaiAppStatic.Types.StaticSettings
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10 }) -}
38254a59f3f5ff3204be2f2f8719d9d1
  main7 :: GHC.IO.FilePath
  {- Unfolding: (case Main.www of wild {
                   [] -> Main.main8 GHC.Prim.void#
                   : ipv ipv1
                   -> case System.FilePath.Posix.hasTrailingPathSeparator_$sgo
                             (GHC.List.lastError @ GHC.Types.Char)
                             ipv
                             ipv1 of wild1 { GHC.Types.C# ds1 ->
                      case ds1 of ds2 {
                        DEFAULT -> Main.main8 GHC.Prim.void# '/'# -> wild } } }) -}
89fd7dca6e8fa88626be3172a1e50e09
  main8 :: GHC.Prim.Void# -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (\ (w :: GHC.Prim.Void#)[OneShot] ->
                 let {
                   z :: [GHC.Types.Char]
                   = GHC.Types.:
                       @ GHC.Types.Char
                       System.FilePath.Posix.pathSeparator
                       (GHC.Types.[] @ GHC.Types.Char)
                 } in
                 letrec {
                   go32 :: [GHC.Types.Char] -> [GHC.Types.Char] {- Arity: 1 -}
                   = \ (ds :: [GHC.Types.Char]) ->
                     case ds of wild {
                       [] -> z : y ys -> GHC.Types.: @ GHC.Types.Char y (go32 ys) }
                 } in
                 go32 Main.www) -}
86f091328f23e859437e0ec725093f8d
  main9 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8080#) -}
08c2188a874fb99dcabaec9a412cce6f
  www :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString# "www"#) -}
instance Data.Aeson.Types.FromJSON.FromJSON [Main.Habit]
  = Main.$fFromJSONHabit
instance Data.Aeson.Types.FromJSON.FromJSON [Main.LogItem]
  = Main.$fFromJSONLogItem
instance Data.Aeson.Types.FromJSON.FromJSON [Main.LogStatus]
  = Main.$fFromJSONLogStatus
instance GHC.Generics.Generic [Main.Habit] = Main.$fGenericHabit
instance GHC.Generics.Generic [Main.LogItem]
  = Main.$fGenericLogItem
instance GHC.Generics.Generic [Main.LogStatus]
  = Main.$fGenericLogStatus
instance GHC.Show.Show [Main.Habit] = Main.$fShowHabit
instance GHC.Show.Show [Main.LogItem] = Main.$fShowLogItem
instance GHC.Show.Show [Main.LogStatus] = Main.$fShowLogStatus
instance Data.Aeson.Types.ToJSON.ToJSON [Main.Habit]
  = Main.$fToJSONHabit
instance Data.Aeson.Types.ToJSON.ToJSON [Main.LogItem]
  = Main.$fToJSONLogItem
instance Data.Aeson.Types.ToJSON.ToJSON [Main.LogStatus]
  = Main.$fToJSONLogStatus
family instance GHC.Generics.Rep [Main.Habit] = Main.Rep_Habit
family instance GHC.Generics.Rep [Main.LogItem] = Main.Rep_LogItem
family instance GHC.Generics.Rep [Main.LogStatus]
  = Main.Rep_LogStatus
"SPEC/Main $fAllCTRender:a @ JSON @ '[] @ [Habit]" [ALWAYS] forall ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                         '[Servant.API.ContentTypes.JSON]
                                                                                         [Main.Habit])
                                                                   ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                   '[])
                                                                   ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                  Servant.API.ContentTypes.JSON)
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ [Main.Habit]
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = Main.$s$fAllCTRender:a
"SPEC/Main $fAllMimeRender:a0 @ JSON @ [Habit]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                   Servant.API.ContentTypes.JSON
                                                                                   [Main.Habit])
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ [Main.Habit]
                                              $dMimeRender
  = Main.$s$fAllCTRender:a_$s$fAllMimeRender:a0
"SPEC/Main $fAllMimeUnrender:a @ JSON @ Habit @ '[]" [ALWAYS] forall ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                             '[]
                                                                                             Main.Habit)
                                                                     ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                          Servant.API.ContentTypes.JSON
                                                                                          Main.Habit)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ Main.Habit
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = Main.$s$fAllMimeUnrender:a
"SPEC/Main $fConstructorMetaMetaCons @ "Completed" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                       'GHC.Types.False)
                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                      'GHC.Generics.PrefixI)
                                                                                        ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                            "Completed")
  GHC.Generics.$fConstructorMetaMetaCons @ "Completed"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons2
"SPEC/Main $fConstructorMetaMetaCons @ "NotCompleted" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                          'GHC.Types.False)
                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                         'GHC.Generics.PrefixI)
                                                                                           ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                               "NotCompleted")
  GHC.Generics.$fConstructorMetaMetaCons @ "NotCompleted"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons1
"SPEC/Main $fConstructorMetaMetaCons @ "Skipped" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.False)
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "Skipped")
  GHC.Generics.$fConstructorMetaMetaCons @ "Skipped"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Main.$fFromJSONLogStatus_$s$fConstructorMetaMetaCons
"SPEC/Main $fFromJSON(,,) @ Integer @ Integer @ Integer" [ALWAYS] forall ($dFromJSON2 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                           GHC.Integer.Type.Integer)
                                                                         ($dFromJSON1 :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                           GHC.Integer.Type.Integer)
                                                                         ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                          GHC.Integer.Type.Integer)
  Data.Aeson.Types.FromJSON.$fFromJSON(,,) @ GHC.Integer.Type.Integer
                                           @ GHC.Integer.Type.Integer
                                           @ GHC.Integer.Type.Integer
                                           $dFromJSON
                                           $dFromJSON1
                                           $dFromJSON2
  = Main.$fFromJSONLogItem_$s$fFromJSON(,,)
"SPEC/Main $fFromJSON[] @ Char" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                 GHC.Types.Char)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Types.Char $dFromJSON
  = Main.$fFromJSONHabit_$s$fFromJSON[]1
"SPEC/Main $fFromJSON[] @ LogItem" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                    Main.LogItem)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ Main.LogItem $dFromJSON
  = Main.$fFromJSONHabit_$s$fFromJSON[]
"SPEC/Main $fMimeRenderTYPEJSONa @ [Habit]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                           [Main.Habit])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ [Main.Habit]
                                                 $dToJSON
  = Main.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa
"SPEC/Main $fMimeRenderTYPEJSONa_$cmimeRender @ [Habit]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                        [Main.Habit])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ [Main.Habit]
                                                              $dToJSON
  = Main.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender
"SPEC/Main $fMimeUnrenderTYPEJSONa @ Habit" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                             Main.Habit)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ Main.Habit
                                                   $dFromJSON
  = Main.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa
"SPEC/Main $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Habit" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                            Main.Habit)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Main.Habit
                                                                  $dFromJSON
  = Main.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "habitChain") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                            "habitChain"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "habitChain")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "habitId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                         "habitId"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "habitId")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel3
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "habitMotivation") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                                                                 "habitMotivation"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just
                                          "habitMotivation")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel1
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "habitName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                          ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                          ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                          ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                                                           "habitName"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "habitName")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel2
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "logDate") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                         "logDate"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "logDate")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel1
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "logStatus") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                          ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                          ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                          ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                                                           "logStatus"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "logStatus")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel
"SPEC/Main $fSelectorMetaMetaSel_$cselName @ ('Just
                                               "habitChain") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "habitChain"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "habitChain")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Main $fSelectorMetaMetaSel_$cselName @ ('Just
                                               "habitId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                            ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                            ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                            ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                             "habitId"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "habitId")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName3
"SPEC/Main $fSelectorMetaMetaSel_$cselName @ ('Just
                                               "habitMotivation") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                    ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                                                                     "habitMotivation"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "habitMotivation")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/Main $fSelectorMetaMetaSel_$cselName @ ('Just
                                               "habitName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                                               "habitName"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "habitName")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Main.$fFromJSONHabit_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/Main $fSelectorMetaMetaSel_$cselName @ ('Just
                                               "logDate") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                            ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                            ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                            ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                             "logDate"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "logDate")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/Main $fSelectorMetaMetaSel_$cselName @ ('Just
                                               "logStatus") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                                               "logStatus"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "logStatus")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Main.$fFromJSONLogItem_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Main $fShow[] @ LogItem" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                            Main.LogItem)
  GHC.Show.$fShow[] @ Main.LogItem $dShow
  = Main.$fShowHabit_$s$fShow[]
"SPEC/Main $fShow[]_$cshow @ LogItem" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                   Main.LogItem)
  GHC.Show.$fShow[]_$cshow @ Main.LogItem $dShow
  = Main.$fShowHabit_$s$fShow[]_$cshow
"SPEC/Main $fShow[]_$cshowList @ LogItem" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                       Main.LogItem)
  GHC.Show.$fShow[]_$cshowList @ Main.LogItem $dShow
  = Main.$fShowHabit_$s$fShow[]_$cshowList
"SPEC/Main $fShow[]_$cshowsPrec @ LogItem" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                        Main.LogItem)
  GHC.Show.$fShow[]_$cshowsPrec @ Main.LogItem $dShow
  = Main.$fShowHabit_$s$fShow[]_$cshowsPrec
"SPEC/Main $fToJSON[] @ Char" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                             GHC.Types.Char)
  Data.Aeson.Types.ToJSON.$fToJSON[] @ GHC.Types.Char $dToJSON
  = Main.$fToJSONHabit_$s$fToJSON[]1
"SPEC/Main $fToJSON[] @ Habit" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                              Main.Habit)
  Data.Aeson.Types.ToJSON.$fToJSON[] @ Main.Habit $dToJSON
  = Main.$s$fAllCTRender:a_$s$fToJSON[]
"SPEC/Main $fToJSON[] @ LogItem" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                Main.LogItem)
  Data.Aeson.Types.ToJSON.$fToJSON[] @ Main.LogItem $dToJSON
  = Main.$fToJSONHabit_$s$fToJSON[]
"SPEC/Main encode @ [Habit]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                            [Main.Habit])
  Data.Aeson.encode @ [Main.Habit] $dToJSON
  = Main.$s$fAllCTRender:a_$sencode
"SPEC/Main length @ Vector @ Value" [ALWAYS] forall ($dVector :: Data.Vector.Generic.Base.Vector
                                                                   Data.Vector.Vector
                                                                   Data.Aeson.Types.Internal.Value)
  Data.Vector.Generic.length @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             $dVector
  = Main.$fFromJSONLogItem_$slength
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

